/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = pitneyBower.Client.OpenAPIDateConverter;

namespace pitneyBower.Model
{
    /// <summary>
    /// CarrierFacilityResponse
    /// </summary>
    [DataContract]
    public partial class CarrierFacilityResponse :  IEquatable<CarrierFacilityResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CarrierFacilityResponse" /> class.
        /// </summary>
        /// <param name="address">address.</param>
        /// <param name="carrier">carrier.</param>
        /// <param name="carrierFacilityOptions">carrierFacilityOptions.</param>
        /// <param name="carrierFacilitySuggestions">carrierFacilitySuggestions.</param>
        public CarrierFacilityResponse(Address address = default(Address), string carrier = default(string), List<CarrierFacilityResponseCarrierFacilityOptions> carrierFacilityOptions = default(List<CarrierFacilityResponseCarrierFacilityOptions>), List<CarrierFacilityResponseCarrierFacilitySuggestions> carrierFacilitySuggestions = default(List<CarrierFacilityResponseCarrierFacilitySuggestions>))
        {
            this.Address = address;
            this.Carrier = carrier;
            this.CarrierFacilityOptions = carrierFacilityOptions;
            this.CarrierFacilitySuggestions = carrierFacilitySuggestions;
        }
        
        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public Address Address { get; set; }

        /// <summary>
        /// Gets or Sets Carrier
        /// </summary>
        [DataMember(Name="carrier", EmitDefaultValue=false)]
        public string Carrier { get; set; }

        /// <summary>
        /// Gets or Sets CarrierFacilityOptions
        /// </summary>
        [DataMember(Name="carrierFacilityOptions", EmitDefaultValue=false)]
        public List<CarrierFacilityResponseCarrierFacilityOptions> CarrierFacilityOptions { get; set; }

        /// <summary>
        /// Gets or Sets CarrierFacilitySuggestions
        /// </summary>
        [DataMember(Name="carrierFacilitySuggestions", EmitDefaultValue=false)]
        public List<CarrierFacilityResponseCarrierFacilitySuggestions> CarrierFacilitySuggestions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CarrierFacilityResponse {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Carrier: ").Append(Carrier).Append("\n");
            sb.Append("  CarrierFacilityOptions: ").Append(CarrierFacilityOptions).Append("\n");
            sb.Append("  CarrierFacilitySuggestions: ").Append(CarrierFacilitySuggestions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CarrierFacilityResponse);
        }

        /// <summary>
        /// Returns true if CarrierFacilityResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CarrierFacilityResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CarrierFacilityResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.Carrier == input.Carrier ||
                    (this.Carrier != null &&
                    this.Carrier.Equals(input.Carrier))
                ) && 
                (
                    this.CarrierFacilityOptions == input.CarrierFacilityOptions ||
                    this.CarrierFacilityOptions != null &&
                    input.CarrierFacilityOptions != null &&
                    this.CarrierFacilityOptions.SequenceEqual(input.CarrierFacilityOptions)
                ) && 
                (
                    this.CarrierFacilitySuggestions == input.CarrierFacilitySuggestions ||
                    this.CarrierFacilitySuggestions != null &&
                    input.CarrierFacilitySuggestions != null &&
                    this.CarrierFacilitySuggestions.SequenceEqual(input.CarrierFacilitySuggestions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.Carrier != null)
                    hashCode = hashCode * 59 + this.Carrier.GetHashCode();
                if (this.CarrierFacilityOptions != null)
                    hashCode = hashCode * 59 + this.CarrierFacilityOptions.GetHashCode();
                if (this.CarrierFacilitySuggestions != null)
                    hashCode = hashCode * 59 + this.CarrierFacilitySuggestions.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
