/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = pitneyBower.Client.OpenAPIDateConverter;

namespace pitneyBower.Model
{
    /// <summary>
    /// RealTransactionDetailReport
    /// </summary>
    [DataContract]
    public partial class RealTransactionDetailReport :  IEquatable<RealTransactionDetailReport>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RealTransactionDetailReport" /> class.
        /// </summary>
        /// <param name="adjustmentReason">adjustmentReason.</param>
        /// <param name="creditCardFee">creditCardFee.</param>
        /// <param name="customMessage1">customMessage1.</param>
        /// <param name="customMessage2">customMessage2.</param>
        /// <param name="description">description.</param>
        /// <param name="destinationAddress">destinationAddress.</param>
        /// <param name="destinationCountry">destinationCountry.</param>
        /// <param name="destinationZip">destinationZip.</param>
        /// <param name="developerId">developerId.</param>
        /// <param name="developerName">developerName.</param>
        /// <param name="developerPostagePaymentAccountBalance">developerPostagePaymentAccountBalance.</param>
        /// <param name="developerPostagePaymentMethod">developerPostagePaymentMethod.</param>
        /// <param name="developerRateAmount">developerRateAmount.</param>
        /// <param name="developerRatePlan">developerRatePlan.</param>
        /// <param name="dimensionalWeightOz">dimensionalWeightOz.</param>
        /// <param name="externalId">externalId.</param>
        /// <param name="internationalCountryPriceGroup">internationalCountryPriceGroup.</param>
        /// <param name="labelFee">labelFee.</param>
        /// <param name="mailClass">mailClass.</param>
        /// <param name="merchantId">merchantId.</param>
        /// <param name="merchantName">merchantName.</param>
        /// <param name="merchantPostageAccountPaymentMethod">merchantPostageAccountPaymentMethod.</param>
        /// <param name="merchantRate">merchantRate.</param>
        /// <param name="merchantRatePlan">merchantRatePlan.</param>
        /// <param name="meterNumber">meterNumber.</param>
        /// <param name="originZip">originZip.</param>
        /// <param name="originationAddress">originationAddress.</param>
        /// <param name="packageHeightInInches">packageHeightInInches.</param>
        /// <param name="packageLengthInInches">packageLengthInInches.</param>
        /// <param name="packageType">packageType.</param>
        /// <param name="packageTypeIndicator">packageTypeIndicator.</param>
        /// <param name="packageWidthInInches">packageWidthInInches.</param>
        /// <param name="parcelTrackingNumber">parcelTrackingNumber.</param>
        /// <param name="postageDepositAmount">postageDepositAmount.</param>
        /// <param name="printStatus">printStatus.</param>
        /// <param name="references">references.</param>
        /// <param name="refundDenialReason">refundDenialReason.</param>
        /// <param name="refundRequestor">refundRequestor.</param>
        /// <param name="refundStatus">refundStatus.</param>
        /// <param name="shipmentId">shipmentId.</param>
        /// <param name="shipperPostagePaymentAccountBalance">shipperPostagePaymentAccountBalance.</param>
        /// <param name="specialServices">specialServices.</param>
        /// <param name="status">status.</param>
        /// <param name="transactionDateTime">transactionDateTime.</param>
        /// <param name="transactionId">transactionId.</param>
        /// <param name="transactionType">transactionType.</param>
        /// <param name="valueOfGoods">valueOfGoods.</param>
        /// <param name="weightInOunces">weightInOunces.</param>
        /// <param name="zone">zone.</param>
        public RealTransactionDetailReport(string adjustmentReason = default(string), double creditCardFee = default(double), string customMessage1 = default(string), string customMessage2 = default(string), string description = default(string), string destinationAddress = default(string), string destinationCountry = default(string), string destinationZip = default(string), string developerId = default(string), string developerName = default(string), double developerPostagePaymentAccountBalance = default(double), string developerPostagePaymentMethod = default(string), double developerRateAmount = default(double), string developerRatePlan = default(string), double dimensionalWeightOz = default(double), string externalId = default(string), string internationalCountryPriceGroup = default(string), string labelFee = default(string), string mailClass = default(string), string merchantId = default(string), string merchantName = default(string), string merchantPostageAccountPaymentMethod = default(string), double merchantRate = default(double), string merchantRatePlan = default(string), string meterNumber = default(string), string originZip = default(string), string originationAddress = default(string), double packageHeightInInches = default(double), double packageLengthInInches = default(double), string packageType = default(string), string packageTypeIndicator = default(string), double packageWidthInInches = default(double), string parcelTrackingNumber = default(string), double postageDepositAmount = default(double), string printStatus = default(string), List<Parameter> references = default(List<Parameter>), string refundDenialReason = default(string), string refundRequestor = default(string), string refundStatus = default(string), string shipmentId = default(string), double shipperPostagePaymentAccountBalance = default(double), List<SpecialService> specialServices = default(List<SpecialService>), string status = default(string), DateTime transactionDateTime = default(DateTime), string transactionId = default(string), string transactionType = default(string), double valueOfGoods = default(double), int weightInOunces = default(int), string zone = default(string))
        {
            this.AdjustmentReason = adjustmentReason;
            this.CreditCardFee = creditCardFee;
            this.CustomMessage1 = customMessage1;
            this.CustomMessage2 = customMessage2;
            this.Description = description;
            this.DestinationAddress = destinationAddress;
            this.DestinationCountry = destinationCountry;
            this.DestinationZip = destinationZip;
            this.DeveloperId = developerId;
            this.DeveloperName = developerName;
            this.DeveloperPostagePaymentAccountBalance = developerPostagePaymentAccountBalance;
            this.DeveloperPostagePaymentMethod = developerPostagePaymentMethod;
            this.DeveloperRateAmount = developerRateAmount;
            this.DeveloperRatePlan = developerRatePlan;
            this.DimensionalWeightOz = dimensionalWeightOz;
            this.ExternalId = externalId;
            this.InternationalCountryPriceGroup = internationalCountryPriceGroup;
            this.LabelFee = labelFee;
            this.MailClass = mailClass;
            this.MerchantId = merchantId;
            this.MerchantName = merchantName;
            this.MerchantPostageAccountPaymentMethod = merchantPostageAccountPaymentMethod;
            this.MerchantRate = merchantRate;
            this.MerchantRatePlan = merchantRatePlan;
            this.MeterNumber = meterNumber;
            this.OriginZip = originZip;
            this.OriginationAddress = originationAddress;
            this.PackageHeightInInches = packageHeightInInches;
            this.PackageLengthInInches = packageLengthInInches;
            this.PackageType = packageType;
            this.PackageTypeIndicator = packageTypeIndicator;
            this.PackageWidthInInches = packageWidthInInches;
            this.ParcelTrackingNumber = parcelTrackingNumber;
            this.PostageDepositAmount = postageDepositAmount;
            this.PrintStatus = printStatus;
            this.References = references;
            this.RefundDenialReason = refundDenialReason;
            this.RefundRequestor = refundRequestor;
            this.RefundStatus = refundStatus;
            this.ShipmentId = shipmentId;
            this.ShipperPostagePaymentAccountBalance = shipperPostagePaymentAccountBalance;
            this.SpecialServices = specialServices;
            this.Status = status;
            this.TransactionDateTime = transactionDateTime;
            this.TransactionId = transactionId;
            this.TransactionType = transactionType;
            this.ValueOfGoods = valueOfGoods;
            this.WeightInOunces = weightInOunces;
            this.Zone = zone;
        }
        
        /// <summary>
        /// Gets or Sets AdjustmentReason
        /// </summary>
        [DataMember(Name="adjustmentReason", EmitDefaultValue=false)]
        public string AdjustmentReason { get; set; }

        /// <summary>
        /// Gets or Sets CreditCardFee
        /// </summary>
        [DataMember(Name="creditCardFee", EmitDefaultValue=false)]
        public double CreditCardFee { get; set; }

        /// <summary>
        /// Gets or Sets CustomMessage1
        /// </summary>
        [DataMember(Name="customMessage1", EmitDefaultValue=false)]
        public string CustomMessage1 { get; set; }

        /// <summary>
        /// Gets or Sets CustomMessage2
        /// </summary>
        [DataMember(Name="customMessage2", EmitDefaultValue=false)]
        public string CustomMessage2 { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DestinationAddress
        /// </summary>
        [DataMember(Name="destinationAddress", EmitDefaultValue=false)]
        public string DestinationAddress { get; set; }

        /// <summary>
        /// Gets or Sets DestinationCountry
        /// </summary>
        [DataMember(Name="destinationCountry", EmitDefaultValue=false)]
        public string DestinationCountry { get; set; }

        /// <summary>
        /// Gets or Sets DestinationZip
        /// </summary>
        [DataMember(Name="destinationZip", EmitDefaultValue=false)]
        public string DestinationZip { get; set; }

        /// <summary>
        /// Gets or Sets DeveloperId
        /// </summary>
        [DataMember(Name="developerId", EmitDefaultValue=false)]
        public string DeveloperId { get; set; }

        /// <summary>
        /// Gets or Sets DeveloperName
        /// </summary>
        [DataMember(Name="developerName", EmitDefaultValue=false)]
        public string DeveloperName { get; set; }

        /// <summary>
        /// Gets or Sets DeveloperPostagePaymentAccountBalance
        /// </summary>
        [DataMember(Name="developerPostagePaymentAccountBalance", EmitDefaultValue=false)]
        public double DeveloperPostagePaymentAccountBalance { get; set; }

        /// <summary>
        /// Gets or Sets DeveloperPostagePaymentMethod
        /// </summary>
        [DataMember(Name="developerPostagePaymentMethod", EmitDefaultValue=false)]
        public string DeveloperPostagePaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets DeveloperRateAmount
        /// </summary>
        [DataMember(Name="developerRateAmount", EmitDefaultValue=false)]
        public double DeveloperRateAmount { get; set; }

        /// <summary>
        /// Gets or Sets DeveloperRatePlan
        /// </summary>
        [DataMember(Name="developerRatePlan", EmitDefaultValue=false)]
        public string DeveloperRatePlan { get; set; }

        /// <summary>
        /// Gets or Sets DimensionalWeightOz
        /// </summary>
        [DataMember(Name="dimensionalWeightOz", EmitDefaultValue=false)]
        public double DimensionalWeightOz { get; set; }

        /// <summary>
        /// Gets or Sets ExternalId
        /// </summary>
        [DataMember(Name="externalId", EmitDefaultValue=false)]
        public string ExternalId { get; set; }

        /// <summary>
        /// Gets or Sets InternationalCountryPriceGroup
        /// </summary>
        [DataMember(Name="internationalCountryPriceGroup", EmitDefaultValue=false)]
        public string InternationalCountryPriceGroup { get; set; }

        /// <summary>
        /// Gets or Sets LabelFee
        /// </summary>
        [DataMember(Name="labelFee", EmitDefaultValue=false)]
        public string LabelFee { get; set; }

        /// <summary>
        /// Gets or Sets MailClass
        /// </summary>
        [DataMember(Name="mailClass", EmitDefaultValue=false)]
        public string MailClass { get; set; }

        /// <summary>
        /// Gets or Sets MerchantId
        /// </summary>
        [DataMember(Name="merchantId", EmitDefaultValue=false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Gets or Sets MerchantName
        /// </summary>
        [DataMember(Name="merchantName", EmitDefaultValue=false)]
        public string MerchantName { get; set; }

        /// <summary>
        /// Gets or Sets MerchantPostageAccountPaymentMethod
        /// </summary>
        [DataMember(Name="merchantPostageAccountPaymentMethod", EmitDefaultValue=false)]
        public string MerchantPostageAccountPaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets MerchantRate
        /// </summary>
        [DataMember(Name="merchantRate", EmitDefaultValue=false)]
        public double MerchantRate { get; set; }

        /// <summary>
        /// Gets or Sets MerchantRatePlan
        /// </summary>
        [DataMember(Name="merchantRatePlan", EmitDefaultValue=false)]
        public string MerchantRatePlan { get; set; }

        /// <summary>
        /// Gets or Sets MeterNumber
        /// </summary>
        [DataMember(Name="meterNumber", EmitDefaultValue=false)]
        public string MeterNumber { get; set; }

        /// <summary>
        /// Gets or Sets OriginZip
        /// </summary>
        [DataMember(Name="originZip", EmitDefaultValue=false)]
        public string OriginZip { get; set; }

        /// <summary>
        /// Gets or Sets OriginationAddress
        /// </summary>
        [DataMember(Name="originationAddress", EmitDefaultValue=false)]
        public string OriginationAddress { get; set; }

        /// <summary>
        /// Gets or Sets PackageHeightInInches
        /// </summary>
        [DataMember(Name="packageHeightInInches", EmitDefaultValue=false)]
        public double PackageHeightInInches { get; set; }

        /// <summary>
        /// Gets or Sets PackageLengthInInches
        /// </summary>
        [DataMember(Name="packageLengthInInches", EmitDefaultValue=false)]
        public double PackageLengthInInches { get; set; }

        /// <summary>
        /// Gets or Sets PackageType
        /// </summary>
        [DataMember(Name="packageType", EmitDefaultValue=false)]
        public string PackageType { get; set; }

        /// <summary>
        /// Gets or Sets PackageTypeIndicator
        /// </summary>
        [DataMember(Name="packageTypeIndicator", EmitDefaultValue=false)]
        public string PackageTypeIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PackageWidthInInches
        /// </summary>
        [DataMember(Name="packageWidthInInches", EmitDefaultValue=false)]
        public double PackageWidthInInches { get; set; }

        /// <summary>
        /// Gets or Sets ParcelTrackingNumber
        /// </summary>
        [DataMember(Name="parcelTrackingNumber", EmitDefaultValue=false)]
        public string ParcelTrackingNumber { get; set; }

        /// <summary>
        /// Gets or Sets PostageDepositAmount
        /// </summary>
        [DataMember(Name="postageDepositAmount", EmitDefaultValue=false)]
        public double PostageDepositAmount { get; set; }

        /// <summary>
        /// Gets or Sets PrintStatus
        /// </summary>
        [DataMember(Name="printStatus", EmitDefaultValue=false)]
        public string PrintStatus { get; set; }

        /// <summary>
        /// Gets or Sets References
        /// </summary>
        [DataMember(Name="references", EmitDefaultValue=false)]
        public List<Parameter> References { get; set; }

        /// <summary>
        /// Gets or Sets RefundDenialReason
        /// </summary>
        [DataMember(Name="refundDenialReason", EmitDefaultValue=false)]
        public string RefundDenialReason { get; set; }

        /// <summary>
        /// Gets or Sets RefundRequestor
        /// </summary>
        [DataMember(Name="refundRequestor", EmitDefaultValue=false)]
        public string RefundRequestor { get; set; }

        /// <summary>
        /// Gets or Sets RefundStatus
        /// </summary>
        [DataMember(Name="refundStatus", EmitDefaultValue=false)]
        public string RefundStatus { get; set; }

        /// <summary>
        /// Gets or Sets ShipmentId
        /// </summary>
        [DataMember(Name="shipmentId", EmitDefaultValue=false)]
        public string ShipmentId { get; set; }

        /// <summary>
        /// Gets or Sets ShipperPostagePaymentAccountBalance
        /// </summary>
        [DataMember(Name="shipperPostagePaymentAccountBalance", EmitDefaultValue=false)]
        public double ShipperPostagePaymentAccountBalance { get; set; }

        /// <summary>
        /// Gets or Sets SpecialServices
        /// </summary>
        [DataMember(Name="specialServices", EmitDefaultValue=false)]
        public List<SpecialService> SpecialServices { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets TransactionDateTime
        /// </summary>
        [DataMember(Name="transactionDateTime", EmitDefaultValue=false)]
        public DateTime TransactionDateTime { get; set; }

        /// <summary>
        /// Gets or Sets TransactionId
        /// </summary>
        [DataMember(Name="transactionId", EmitDefaultValue=false)]
        public string TransactionId { get; set; }

        /// <summary>
        /// Gets or Sets TransactionType
        /// </summary>
        [DataMember(Name="transactionType", EmitDefaultValue=false)]
        public string TransactionType { get; set; }

        /// <summary>
        /// Gets or Sets ValueOfGoods
        /// </summary>
        [DataMember(Name="valueOfGoods", EmitDefaultValue=false)]
        public double ValueOfGoods { get; set; }

        /// <summary>
        /// Gets or Sets WeightInOunces
        /// </summary>
        [DataMember(Name="weightInOunces", EmitDefaultValue=false)]
        public int WeightInOunces { get; set; }

        /// <summary>
        /// Gets or Sets Zone
        /// </summary>
        [DataMember(Name="zone", EmitDefaultValue=false)]
        public string Zone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RealTransactionDetailReport {\n");
            sb.Append("  AdjustmentReason: ").Append(AdjustmentReason).Append("\n");
            sb.Append("  CreditCardFee: ").Append(CreditCardFee).Append("\n");
            sb.Append("  CustomMessage1: ").Append(CustomMessage1).Append("\n");
            sb.Append("  CustomMessage2: ").Append(CustomMessage2).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DestinationAddress: ").Append(DestinationAddress).Append("\n");
            sb.Append("  DestinationCountry: ").Append(DestinationCountry).Append("\n");
            sb.Append("  DestinationZip: ").Append(DestinationZip).Append("\n");
            sb.Append("  DeveloperId: ").Append(DeveloperId).Append("\n");
            sb.Append("  DeveloperName: ").Append(DeveloperName).Append("\n");
            sb.Append("  DeveloperPostagePaymentAccountBalance: ").Append(DeveloperPostagePaymentAccountBalance).Append("\n");
            sb.Append("  DeveloperPostagePaymentMethod: ").Append(DeveloperPostagePaymentMethod).Append("\n");
            sb.Append("  DeveloperRateAmount: ").Append(DeveloperRateAmount).Append("\n");
            sb.Append("  DeveloperRatePlan: ").Append(DeveloperRatePlan).Append("\n");
            sb.Append("  DimensionalWeightOz: ").Append(DimensionalWeightOz).Append("\n");
            sb.Append("  ExternalId: ").Append(ExternalId).Append("\n");
            sb.Append("  InternationalCountryPriceGroup: ").Append(InternationalCountryPriceGroup).Append("\n");
            sb.Append("  LabelFee: ").Append(LabelFee).Append("\n");
            sb.Append("  MailClass: ").Append(MailClass).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  MerchantName: ").Append(MerchantName).Append("\n");
            sb.Append("  MerchantPostageAccountPaymentMethod: ").Append(MerchantPostageAccountPaymentMethod).Append("\n");
            sb.Append("  MerchantRate: ").Append(MerchantRate).Append("\n");
            sb.Append("  MerchantRatePlan: ").Append(MerchantRatePlan).Append("\n");
            sb.Append("  MeterNumber: ").Append(MeterNumber).Append("\n");
            sb.Append("  OriginZip: ").Append(OriginZip).Append("\n");
            sb.Append("  OriginationAddress: ").Append(OriginationAddress).Append("\n");
            sb.Append("  PackageHeightInInches: ").Append(PackageHeightInInches).Append("\n");
            sb.Append("  PackageLengthInInches: ").Append(PackageLengthInInches).Append("\n");
            sb.Append("  PackageType: ").Append(PackageType).Append("\n");
            sb.Append("  PackageTypeIndicator: ").Append(PackageTypeIndicator).Append("\n");
            sb.Append("  PackageWidthInInches: ").Append(PackageWidthInInches).Append("\n");
            sb.Append("  ParcelTrackingNumber: ").Append(ParcelTrackingNumber).Append("\n");
            sb.Append("  PostageDepositAmount: ").Append(PostageDepositAmount).Append("\n");
            sb.Append("  PrintStatus: ").Append(PrintStatus).Append("\n");
            sb.Append("  References: ").Append(References).Append("\n");
            sb.Append("  RefundDenialReason: ").Append(RefundDenialReason).Append("\n");
            sb.Append("  RefundRequestor: ").Append(RefundRequestor).Append("\n");
            sb.Append("  RefundStatus: ").Append(RefundStatus).Append("\n");
            sb.Append("  ShipmentId: ").Append(ShipmentId).Append("\n");
            sb.Append("  ShipperPostagePaymentAccountBalance: ").Append(ShipperPostagePaymentAccountBalance).Append("\n");
            sb.Append("  SpecialServices: ").Append(SpecialServices).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TransactionDateTime: ").Append(TransactionDateTime).Append("\n");
            sb.Append("  TransactionId: ").Append(TransactionId).Append("\n");
            sb.Append("  TransactionType: ").Append(TransactionType).Append("\n");
            sb.Append("  ValueOfGoods: ").Append(ValueOfGoods).Append("\n");
            sb.Append("  WeightInOunces: ").Append(WeightInOunces).Append("\n");
            sb.Append("  Zone: ").Append(Zone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RealTransactionDetailReport);
        }

        /// <summary>
        /// Returns true if RealTransactionDetailReport instances are equal
        /// </summary>
        /// <param name="input">Instance of RealTransactionDetailReport to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RealTransactionDetailReport input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AdjustmentReason == input.AdjustmentReason ||
                    (this.AdjustmentReason != null &&
                    this.AdjustmentReason.Equals(input.AdjustmentReason))
                ) && 
                (
                    this.CreditCardFee == input.CreditCardFee ||
                    (this.CreditCardFee != null &&
                    this.CreditCardFee.Equals(input.CreditCardFee))
                ) && 
                (
                    this.CustomMessage1 == input.CustomMessage1 ||
                    (this.CustomMessage1 != null &&
                    this.CustomMessage1.Equals(input.CustomMessage1))
                ) && 
                (
                    this.CustomMessage2 == input.CustomMessage2 ||
                    (this.CustomMessage2 != null &&
                    this.CustomMessage2.Equals(input.CustomMessage2))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.DestinationAddress == input.DestinationAddress ||
                    (this.DestinationAddress != null &&
                    this.DestinationAddress.Equals(input.DestinationAddress))
                ) && 
                (
                    this.DestinationCountry == input.DestinationCountry ||
                    (this.DestinationCountry != null &&
                    this.DestinationCountry.Equals(input.DestinationCountry))
                ) && 
                (
                    this.DestinationZip == input.DestinationZip ||
                    (this.DestinationZip != null &&
                    this.DestinationZip.Equals(input.DestinationZip))
                ) && 
                (
                    this.DeveloperId == input.DeveloperId ||
                    (this.DeveloperId != null &&
                    this.DeveloperId.Equals(input.DeveloperId))
                ) && 
                (
                    this.DeveloperName == input.DeveloperName ||
                    (this.DeveloperName != null &&
                    this.DeveloperName.Equals(input.DeveloperName))
                ) && 
                (
                    this.DeveloperPostagePaymentAccountBalance == input.DeveloperPostagePaymentAccountBalance ||
                    (this.DeveloperPostagePaymentAccountBalance != null &&
                    this.DeveloperPostagePaymentAccountBalance.Equals(input.DeveloperPostagePaymentAccountBalance))
                ) && 
                (
                    this.DeveloperPostagePaymentMethod == input.DeveloperPostagePaymentMethod ||
                    (this.DeveloperPostagePaymentMethod != null &&
                    this.DeveloperPostagePaymentMethod.Equals(input.DeveloperPostagePaymentMethod))
                ) && 
                (
                    this.DeveloperRateAmount == input.DeveloperRateAmount ||
                    (this.DeveloperRateAmount != null &&
                    this.DeveloperRateAmount.Equals(input.DeveloperRateAmount))
                ) && 
                (
                    this.DeveloperRatePlan == input.DeveloperRatePlan ||
                    (this.DeveloperRatePlan != null &&
                    this.DeveloperRatePlan.Equals(input.DeveloperRatePlan))
                ) && 
                (
                    this.DimensionalWeightOz == input.DimensionalWeightOz ||
                    (this.DimensionalWeightOz != null &&
                    this.DimensionalWeightOz.Equals(input.DimensionalWeightOz))
                ) && 
                (
                    this.ExternalId == input.ExternalId ||
                    (this.ExternalId != null &&
                    this.ExternalId.Equals(input.ExternalId))
                ) && 
                (
                    this.InternationalCountryPriceGroup == input.InternationalCountryPriceGroup ||
                    (this.InternationalCountryPriceGroup != null &&
                    this.InternationalCountryPriceGroup.Equals(input.InternationalCountryPriceGroup))
                ) && 
                (
                    this.LabelFee == input.LabelFee ||
                    (this.LabelFee != null &&
                    this.LabelFee.Equals(input.LabelFee))
                ) && 
                (
                    this.MailClass == input.MailClass ||
                    (this.MailClass != null &&
                    this.MailClass.Equals(input.MailClass))
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.MerchantName == input.MerchantName ||
                    (this.MerchantName != null &&
                    this.MerchantName.Equals(input.MerchantName))
                ) && 
                (
                    this.MerchantPostageAccountPaymentMethod == input.MerchantPostageAccountPaymentMethod ||
                    (this.MerchantPostageAccountPaymentMethod != null &&
                    this.MerchantPostageAccountPaymentMethod.Equals(input.MerchantPostageAccountPaymentMethod))
                ) && 
                (
                    this.MerchantRate == input.MerchantRate ||
                    (this.MerchantRate != null &&
                    this.MerchantRate.Equals(input.MerchantRate))
                ) && 
                (
                    this.MerchantRatePlan == input.MerchantRatePlan ||
                    (this.MerchantRatePlan != null &&
                    this.MerchantRatePlan.Equals(input.MerchantRatePlan))
                ) && 
                (
                    this.MeterNumber == input.MeterNumber ||
                    (this.MeterNumber != null &&
                    this.MeterNumber.Equals(input.MeterNumber))
                ) && 
                (
                    this.OriginZip == input.OriginZip ||
                    (this.OriginZip != null &&
                    this.OriginZip.Equals(input.OriginZip))
                ) && 
                (
                    this.OriginationAddress == input.OriginationAddress ||
                    (this.OriginationAddress != null &&
                    this.OriginationAddress.Equals(input.OriginationAddress))
                ) && 
                (
                    this.PackageHeightInInches == input.PackageHeightInInches ||
                    (this.PackageHeightInInches != null &&
                    this.PackageHeightInInches.Equals(input.PackageHeightInInches))
                ) && 
                (
                    this.PackageLengthInInches == input.PackageLengthInInches ||
                    (this.PackageLengthInInches != null &&
                    this.PackageLengthInInches.Equals(input.PackageLengthInInches))
                ) && 
                (
                    this.PackageType == input.PackageType ||
                    (this.PackageType != null &&
                    this.PackageType.Equals(input.PackageType))
                ) && 
                (
                    this.PackageTypeIndicator == input.PackageTypeIndicator ||
                    (this.PackageTypeIndicator != null &&
                    this.PackageTypeIndicator.Equals(input.PackageTypeIndicator))
                ) && 
                (
                    this.PackageWidthInInches == input.PackageWidthInInches ||
                    (this.PackageWidthInInches != null &&
                    this.PackageWidthInInches.Equals(input.PackageWidthInInches))
                ) && 
                (
                    this.ParcelTrackingNumber == input.ParcelTrackingNumber ||
                    (this.ParcelTrackingNumber != null &&
                    this.ParcelTrackingNumber.Equals(input.ParcelTrackingNumber))
                ) && 
                (
                    this.PostageDepositAmount == input.PostageDepositAmount ||
                    (this.PostageDepositAmount != null &&
                    this.PostageDepositAmount.Equals(input.PostageDepositAmount))
                ) && 
                (
                    this.PrintStatus == input.PrintStatus ||
                    (this.PrintStatus != null &&
                    this.PrintStatus.Equals(input.PrintStatus))
                ) && 
                (
                    this.References == input.References ||
                    this.References != null &&
                    input.References != null &&
                    this.References.SequenceEqual(input.References)
                ) && 
                (
                    this.RefundDenialReason == input.RefundDenialReason ||
                    (this.RefundDenialReason != null &&
                    this.RefundDenialReason.Equals(input.RefundDenialReason))
                ) && 
                (
                    this.RefundRequestor == input.RefundRequestor ||
                    (this.RefundRequestor != null &&
                    this.RefundRequestor.Equals(input.RefundRequestor))
                ) && 
                (
                    this.RefundStatus == input.RefundStatus ||
                    (this.RefundStatus != null &&
                    this.RefundStatus.Equals(input.RefundStatus))
                ) && 
                (
                    this.ShipmentId == input.ShipmentId ||
                    (this.ShipmentId != null &&
                    this.ShipmentId.Equals(input.ShipmentId))
                ) && 
                (
                    this.ShipperPostagePaymentAccountBalance == input.ShipperPostagePaymentAccountBalance ||
                    (this.ShipperPostagePaymentAccountBalance != null &&
                    this.ShipperPostagePaymentAccountBalance.Equals(input.ShipperPostagePaymentAccountBalance))
                ) && 
                (
                    this.SpecialServices == input.SpecialServices ||
                    this.SpecialServices != null &&
                    input.SpecialServices != null &&
                    this.SpecialServices.SequenceEqual(input.SpecialServices)
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.TransactionDateTime == input.TransactionDateTime ||
                    (this.TransactionDateTime != null &&
                    this.TransactionDateTime.Equals(input.TransactionDateTime))
                ) && 
                (
                    this.TransactionId == input.TransactionId ||
                    (this.TransactionId != null &&
                    this.TransactionId.Equals(input.TransactionId))
                ) && 
                (
                    this.TransactionType == input.TransactionType ||
                    (this.TransactionType != null &&
                    this.TransactionType.Equals(input.TransactionType))
                ) && 
                (
                    this.ValueOfGoods == input.ValueOfGoods ||
                    (this.ValueOfGoods != null &&
                    this.ValueOfGoods.Equals(input.ValueOfGoods))
                ) && 
                (
                    this.WeightInOunces == input.WeightInOunces ||
                    (this.WeightInOunces != null &&
                    this.WeightInOunces.Equals(input.WeightInOunces))
                ) && 
                (
                    this.Zone == input.Zone ||
                    (this.Zone != null &&
                    this.Zone.Equals(input.Zone))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AdjustmentReason != null)
                    hashCode = hashCode * 59 + this.AdjustmentReason.GetHashCode();
                if (this.CreditCardFee != null)
                    hashCode = hashCode * 59 + this.CreditCardFee.GetHashCode();
                if (this.CustomMessage1 != null)
                    hashCode = hashCode * 59 + this.CustomMessage1.GetHashCode();
                if (this.CustomMessage2 != null)
                    hashCode = hashCode * 59 + this.CustomMessage2.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.DestinationAddress != null)
                    hashCode = hashCode * 59 + this.DestinationAddress.GetHashCode();
                if (this.DestinationCountry != null)
                    hashCode = hashCode * 59 + this.DestinationCountry.GetHashCode();
                if (this.DestinationZip != null)
                    hashCode = hashCode * 59 + this.DestinationZip.GetHashCode();
                if (this.DeveloperId != null)
                    hashCode = hashCode * 59 + this.DeveloperId.GetHashCode();
                if (this.DeveloperName != null)
                    hashCode = hashCode * 59 + this.DeveloperName.GetHashCode();
                if (this.DeveloperPostagePaymentAccountBalance != null)
                    hashCode = hashCode * 59 + this.DeveloperPostagePaymentAccountBalance.GetHashCode();
                if (this.DeveloperPostagePaymentMethod != null)
                    hashCode = hashCode * 59 + this.DeveloperPostagePaymentMethod.GetHashCode();
                if (this.DeveloperRateAmount != null)
                    hashCode = hashCode * 59 + this.DeveloperRateAmount.GetHashCode();
                if (this.DeveloperRatePlan != null)
                    hashCode = hashCode * 59 + this.DeveloperRatePlan.GetHashCode();
                if (this.DimensionalWeightOz != null)
                    hashCode = hashCode * 59 + this.DimensionalWeightOz.GetHashCode();
                if (this.ExternalId != null)
                    hashCode = hashCode * 59 + this.ExternalId.GetHashCode();
                if (this.InternationalCountryPriceGroup != null)
                    hashCode = hashCode * 59 + this.InternationalCountryPriceGroup.GetHashCode();
                if (this.LabelFee != null)
                    hashCode = hashCode * 59 + this.LabelFee.GetHashCode();
                if (this.MailClass != null)
                    hashCode = hashCode * 59 + this.MailClass.GetHashCode();
                if (this.MerchantId != null)
                    hashCode = hashCode * 59 + this.MerchantId.GetHashCode();
                if (this.MerchantName != null)
                    hashCode = hashCode * 59 + this.MerchantName.GetHashCode();
                if (this.MerchantPostageAccountPaymentMethod != null)
                    hashCode = hashCode * 59 + this.MerchantPostageAccountPaymentMethod.GetHashCode();
                if (this.MerchantRate != null)
                    hashCode = hashCode * 59 + this.MerchantRate.GetHashCode();
                if (this.MerchantRatePlan != null)
                    hashCode = hashCode * 59 + this.MerchantRatePlan.GetHashCode();
                if (this.MeterNumber != null)
                    hashCode = hashCode * 59 + this.MeterNumber.GetHashCode();
                if (this.OriginZip != null)
                    hashCode = hashCode * 59 + this.OriginZip.GetHashCode();
                if (this.OriginationAddress != null)
                    hashCode = hashCode * 59 + this.OriginationAddress.GetHashCode();
                if (this.PackageHeightInInches != null)
                    hashCode = hashCode * 59 + this.PackageHeightInInches.GetHashCode();
                if (this.PackageLengthInInches != null)
                    hashCode = hashCode * 59 + this.PackageLengthInInches.GetHashCode();
                if (this.PackageType != null)
                    hashCode = hashCode * 59 + this.PackageType.GetHashCode();
                if (this.PackageTypeIndicator != null)
                    hashCode = hashCode * 59 + this.PackageTypeIndicator.GetHashCode();
                if (this.PackageWidthInInches != null)
                    hashCode = hashCode * 59 + this.PackageWidthInInches.GetHashCode();
                if (this.ParcelTrackingNumber != null)
                    hashCode = hashCode * 59 + this.ParcelTrackingNumber.GetHashCode();
                if (this.PostageDepositAmount != null)
                    hashCode = hashCode * 59 + this.PostageDepositAmount.GetHashCode();
                if (this.PrintStatus != null)
                    hashCode = hashCode * 59 + this.PrintStatus.GetHashCode();
                if (this.References != null)
                    hashCode = hashCode * 59 + this.References.GetHashCode();
                if (this.RefundDenialReason != null)
                    hashCode = hashCode * 59 + this.RefundDenialReason.GetHashCode();
                if (this.RefundRequestor != null)
                    hashCode = hashCode * 59 + this.RefundRequestor.GetHashCode();
                if (this.RefundStatus != null)
                    hashCode = hashCode * 59 + this.RefundStatus.GetHashCode();
                if (this.ShipmentId != null)
                    hashCode = hashCode * 59 + this.ShipmentId.GetHashCode();
                if (this.ShipperPostagePaymentAccountBalance != null)
                    hashCode = hashCode * 59 + this.ShipperPostagePaymentAccountBalance.GetHashCode();
                if (this.SpecialServices != null)
                    hashCode = hashCode * 59 + this.SpecialServices.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.TransactionDateTime != null)
                    hashCode = hashCode * 59 + this.TransactionDateTime.GetHashCode();
                if (this.TransactionId != null)
                    hashCode = hashCode * 59 + this.TransactionId.GetHashCode();
                if (this.TransactionType != null)
                    hashCode = hashCode * 59 + this.TransactionType.GetHashCode();
                if (this.ValueOfGoods != null)
                    hashCode = hashCode * 59 + this.ValueOfGoods.GetHashCode();
                if (this.WeightInOunces != null)
                    hashCode = hashCode * 59 + this.WeightInOunces.GetHashCode();
                if (this.Zone != null)
                    hashCode = hashCode * 59 + this.Zone.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
