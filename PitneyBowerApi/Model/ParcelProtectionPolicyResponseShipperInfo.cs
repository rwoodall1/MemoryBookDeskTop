/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = pitneyBower.Client.OpenAPIDateConverter;

namespace pitneyBower.Model
{
    /// <summary>
    /// ParcelProtectionPolicyResponseShipperInfo
    /// </summary>
    [DataContract]
    public partial class ParcelProtectionPolicyResponseShipperInfo :  IEquatable<ParcelProtectionPolicyResponseShipperInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParcelProtectionPolicyResponseShipperInfo" /> class.
        /// </summary>
        /// <param name="shipperID">shipperID.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="middleName">middleName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="company">company.</param>
        /// <param name="email">email.</param>
        /// <param name="phoneNumber1">phoneNumber1.</param>
        /// <param name="phoneNumber2">phoneNumber2.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="address">address.</param>
        public ParcelProtectionPolicyResponseShipperInfo(string shipperID = default(string), string firstName = default(string), string middleName = default(string), string lastName = default(string), string company = default(string), string email = default(string), string phoneNumber1 = default(string), string phoneNumber2 = default(string), string faxNumber = default(string), ParcelProtectionPolicyResponseShipperInfoAddress address = default(ParcelProtectionPolicyResponseShipperInfoAddress))
        {
            this.ShipperID = shipperID;
            this.FirstName = firstName;
            this.MiddleName = middleName;
            this.LastName = lastName;
            this.Company = company;
            this.Email = email;
            this.PhoneNumber1 = phoneNumber1;
            this.PhoneNumber2 = phoneNumber2;
            this.FaxNumber = faxNumber;
            this.Address = address;
        }
        
        /// <summary>
        /// Gets or Sets ShipperID
        /// </summary>
        [DataMember(Name="shipperID", EmitDefaultValue=false)]
        public string ShipperID { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName", EmitDefaultValue=false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets MiddleName
        /// </summary>
        [DataMember(Name="middleName", EmitDefaultValue=false)]
        public string MiddleName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName", EmitDefaultValue=false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name="company", EmitDefaultValue=false)]
        public string Company { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber1
        /// </summary>
        [DataMember(Name="phoneNumber1", EmitDefaultValue=false)]
        public string PhoneNumber1 { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber2
        /// </summary>
        [DataMember(Name="phoneNumber2", EmitDefaultValue=false)]
        public string PhoneNumber2 { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="faxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public ParcelProtectionPolicyResponseShipperInfoAddress Address { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ParcelProtectionPolicyResponseShipperInfo {\n");
            sb.Append("  ShipperID: ").Append(ShipperID).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  MiddleName: ").Append(MiddleName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  PhoneNumber1: ").Append(PhoneNumber1).Append("\n");
            sb.Append("  PhoneNumber2: ").Append(PhoneNumber2).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ParcelProtectionPolicyResponseShipperInfo);
        }

        /// <summary>
        /// Returns true if ParcelProtectionPolicyResponseShipperInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of ParcelProtectionPolicyResponseShipperInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ParcelProtectionPolicyResponseShipperInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ShipperID == input.ShipperID ||
                    (this.ShipperID != null &&
                    this.ShipperID.Equals(input.ShipperID))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.MiddleName == input.MiddleName ||
                    (this.MiddleName != null &&
                    this.MiddleName.Equals(input.MiddleName))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.Company == input.Company ||
                    (this.Company != null &&
                    this.Company.Equals(input.Company))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.PhoneNumber1 == input.PhoneNumber1 ||
                    (this.PhoneNumber1 != null &&
                    this.PhoneNumber1.Equals(input.PhoneNumber1))
                ) && 
                (
                    this.PhoneNumber2 == input.PhoneNumber2 ||
                    (this.PhoneNumber2 != null &&
                    this.PhoneNumber2.Equals(input.PhoneNumber2))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ShipperID != null)
                    hashCode = hashCode * 59 + this.ShipperID.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.MiddleName != null)
                    hashCode = hashCode * 59 + this.MiddleName.GetHashCode();
                if (this.LastName != null)
                    hashCode = hashCode * 59 + this.LastName.GetHashCode();
                if (this.Company != null)
                    hashCode = hashCode * 59 + this.Company.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.PhoneNumber1 != null)
                    hashCode = hashCode * 59 + this.PhoneNumber1.GetHashCode();
                if (this.PhoneNumber2 != null)
                    hashCode = hashCode * 59 + this.PhoneNumber2.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
