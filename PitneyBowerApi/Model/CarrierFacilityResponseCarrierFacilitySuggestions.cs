/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = pitneyBower.Client.OpenAPIDateConverter;

namespace pitneyBower.Model
{
    /// <summary>
    /// CarrierFacilityResponseCarrierFacilitySuggestions
    /// </summary>
    [DataContract]
    public partial class CarrierFacilityResponseCarrierFacilitySuggestions :  IEquatable<CarrierFacilityResponseCarrierFacilitySuggestions>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CarrierFacilityResponseCarrierFacilitySuggestions" /> class.
        /// </summary>
        /// <param name="address">address.</param>
        /// <param name="carrierFacilityAttributes">carrierFacilityAttributes.</param>
        /// <param name="facilityHours">facilityHours.</param>
        /// <param name="facilityParking">facilityParking.</param>
        public CarrierFacilityResponseCarrierFacilitySuggestions(Address address = default(Address), List<CarrierFacilityResponseCarrierFacilityOptions> carrierFacilityAttributes = default(List<CarrierFacilityResponseCarrierFacilityOptions>), List<CarrierFacilityResponseFacilityHours> facilityHours = default(List<CarrierFacilityResponseFacilityHours>), string facilityParking = default(string))
        {
            this.Address = address;
            this.CarrierFacilityAttributes = carrierFacilityAttributes;
            this.FacilityHours = facilityHours;
            this.FacilityParking = facilityParking;
        }
        
        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public Address Address { get; set; }

        /// <summary>
        /// Gets or Sets CarrierFacilityAttributes
        /// </summary>
        [DataMember(Name="carrierFacilityAttributes", EmitDefaultValue=false)]
        public List<CarrierFacilityResponseCarrierFacilityOptions> CarrierFacilityAttributes { get; set; }

        /// <summary>
        /// Gets or Sets FacilityHours
        /// </summary>
        [DataMember(Name="facilityHours", EmitDefaultValue=false)]
        public List<CarrierFacilityResponseFacilityHours> FacilityHours { get; set; }

        /// <summary>
        /// Gets or Sets FacilityParking
        /// </summary>
        [DataMember(Name="facilityParking", EmitDefaultValue=false)]
        public string FacilityParking { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CarrierFacilityResponseCarrierFacilitySuggestions {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  CarrierFacilityAttributes: ").Append(CarrierFacilityAttributes).Append("\n");
            sb.Append("  FacilityHours: ").Append(FacilityHours).Append("\n");
            sb.Append("  FacilityParking: ").Append(FacilityParking).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CarrierFacilityResponseCarrierFacilitySuggestions);
        }

        /// <summary>
        /// Returns true if CarrierFacilityResponseCarrierFacilitySuggestions instances are equal
        /// </summary>
        /// <param name="input">Instance of CarrierFacilityResponseCarrierFacilitySuggestions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CarrierFacilityResponseCarrierFacilitySuggestions input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.CarrierFacilityAttributes == input.CarrierFacilityAttributes ||
                    this.CarrierFacilityAttributes != null &&
                    input.CarrierFacilityAttributes != null &&
                    this.CarrierFacilityAttributes.SequenceEqual(input.CarrierFacilityAttributes)
                ) && 
                (
                    this.FacilityHours == input.FacilityHours ||
                    this.FacilityHours != null &&
                    input.FacilityHours != null &&
                    this.FacilityHours.SequenceEqual(input.FacilityHours)
                ) && 
                (
                    this.FacilityParking == input.FacilityParking ||
                    (this.FacilityParking != null &&
                    this.FacilityParking.Equals(input.FacilityParking))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.CarrierFacilityAttributes != null)
                    hashCode = hashCode * 59 + this.CarrierFacilityAttributes.GetHashCode();
                if (this.FacilityHours != null)
                    hashCode = hashCode * 59 + this.FacilityHours.GetHashCode();
                if (this.FacilityParking != null)
                    hashCode = hashCode * 59 + this.FacilityParking.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
