/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = pitneyBower.Client.OpenAPIDateConverter;

namespace pitneyBower.Model
{
    /// <summary>
    /// DeliveryCommitment
    /// </summary>
    [DataContract]
    public partial class DeliveryCommitment :  IEquatable<DeliveryCommitment>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeliveryCommitment" /> class.
        /// </summary>
        /// <param name="additionalDetails">additionalDetails.</param>
        /// <param name="estimatedDeliveryDateTime">estimatedDeliveryDateTime.</param>
        /// <param name="guarantee">guarantee.</param>
        /// <param name="maxEstimatedNumberOfDays">maxEstimatedNumberOfDays.</param>
        /// <param name="minEstimatedNumberOfDays">minEstimatedNumberOfDays.</param>
        public DeliveryCommitment(string additionalDetails = default(string), string estimatedDeliveryDateTime = default(string), string guarantee = default(string), string maxEstimatedNumberOfDays = default(string), string minEstimatedNumberOfDays = default(string))
        {
            this.AdditionalDetails = additionalDetails;
            this.EstimatedDeliveryDateTime = estimatedDeliveryDateTime;
            this.Guarantee = guarantee;
            this.MaxEstimatedNumberOfDays = maxEstimatedNumberOfDays;
            this.MinEstimatedNumberOfDays = minEstimatedNumberOfDays;
        }
        
        /// <summary>
        /// Gets or Sets AdditionalDetails
        /// </summary>
        [DataMember(Name="additionalDetails", EmitDefaultValue=false)]
        public string AdditionalDetails { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedDeliveryDateTime
        /// </summary>
        [DataMember(Name="estimatedDeliveryDateTime", EmitDefaultValue=false)]
        public string EstimatedDeliveryDateTime { get; set; }

        /// <summary>
        /// Gets or Sets Guarantee
        /// </summary>
        [DataMember(Name="guarantee", EmitDefaultValue=false)]
        public string Guarantee { get; set; }

        /// <summary>
        /// Gets or Sets MaxEstimatedNumberOfDays
        /// </summary>
        [DataMember(Name="maxEstimatedNumberOfDays", EmitDefaultValue=false)]
        public string MaxEstimatedNumberOfDays { get; set; }

        /// <summary>
        /// Gets or Sets MinEstimatedNumberOfDays
        /// </summary>
        [DataMember(Name="minEstimatedNumberOfDays", EmitDefaultValue=false)]
        public string MinEstimatedNumberOfDays { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DeliveryCommitment {\n");
            sb.Append("  AdditionalDetails: ").Append(AdditionalDetails).Append("\n");
            sb.Append("  EstimatedDeliveryDateTime: ").Append(EstimatedDeliveryDateTime).Append("\n");
            sb.Append("  Guarantee: ").Append(Guarantee).Append("\n");
            sb.Append("  MaxEstimatedNumberOfDays: ").Append(MaxEstimatedNumberOfDays).Append("\n");
            sb.Append("  MinEstimatedNumberOfDays: ").Append(MinEstimatedNumberOfDays).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DeliveryCommitment);
        }

        /// <summary>
        /// Returns true if DeliveryCommitment instances are equal
        /// </summary>
        /// <param name="input">Instance of DeliveryCommitment to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DeliveryCommitment input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AdditionalDetails == input.AdditionalDetails ||
                    (this.AdditionalDetails != null &&
                    this.AdditionalDetails.Equals(input.AdditionalDetails))
                ) && 
                (
                    this.EstimatedDeliveryDateTime == input.EstimatedDeliveryDateTime ||
                    (this.EstimatedDeliveryDateTime != null &&
                    this.EstimatedDeliveryDateTime.Equals(input.EstimatedDeliveryDateTime))
                ) && 
                (
                    this.Guarantee == input.Guarantee ||
                    (this.Guarantee != null &&
                    this.Guarantee.Equals(input.Guarantee))
                ) && 
                (
                    this.MaxEstimatedNumberOfDays == input.MaxEstimatedNumberOfDays ||
                    (this.MaxEstimatedNumberOfDays != null &&
                    this.MaxEstimatedNumberOfDays.Equals(input.MaxEstimatedNumberOfDays))
                ) && 
                (
                    this.MinEstimatedNumberOfDays == input.MinEstimatedNumberOfDays ||
                    (this.MinEstimatedNumberOfDays != null &&
                    this.MinEstimatedNumberOfDays.Equals(input.MinEstimatedNumberOfDays))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AdditionalDetails != null)
                    hashCode = hashCode * 59 + this.AdditionalDetails.GetHashCode();
                if (this.EstimatedDeliveryDateTime != null)
                    hashCode = hashCode * 59 + this.EstimatedDeliveryDateTime.GetHashCode();
                if (this.Guarantee != null)
                    hashCode = hashCode * 59 + this.Guarantee.GetHashCode();
                if (this.MaxEstimatedNumberOfDays != null)
                    hashCode = hashCode * 59 + this.MaxEstimatedNumberOfDays.GetHashCode();
                if (this.MinEstimatedNumberOfDays != null)
                    hashCode = hashCode * 59 + this.MinEstimatedNumberOfDays.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
