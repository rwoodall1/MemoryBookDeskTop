/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = pitneyBower.Client.OpenAPIDateConverter;

namespace pitneyBower.Model
{
    /// <summary>
    /// ParcelProtectionCreateResponse
    /// </summary>
    [DataContract]
    public partial class ParcelProtectionCreateResponse :  IEquatable<ParcelProtectionCreateResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParcelProtectionCreateResponse" /> class.
        /// </summary>
        /// <param name="transactionID">transactionID.</param>
        /// <param name="parcelProtectionReferenceID">parcelProtectionReferenceID.</param>
        /// <param name="parcelProtectionDate">parcelProtectionDate.</param>
        /// <param name="parcelProtectionFees">parcelProtectionFees.</param>
        /// <param name="parcelProtectionFeesCurrencyCode">parcelProtectionFeesCurrencyCode.</param>
        /// <param name="parcelProtectionFeesBreakup">parcelProtectionFeesBreakup.</param>
        public ParcelProtectionCreateResponse(string transactionID = default(string), string parcelProtectionReferenceID = default(string), string parcelProtectionDate = default(string), decimal parcelProtectionFees = default(decimal), string parcelProtectionFeesCurrencyCode = default(string), ParcelProtectionCreateResponseParcelProtectionFeesBreakup parcelProtectionFeesBreakup = default(ParcelProtectionCreateResponseParcelProtectionFeesBreakup))
        {
            this.TransactionID = transactionID;
            this.ParcelProtectionReferenceID = parcelProtectionReferenceID;
            this.ParcelProtectionDate = parcelProtectionDate;
            this.ParcelProtectionFees = parcelProtectionFees;
            this.ParcelProtectionFeesCurrencyCode = parcelProtectionFeesCurrencyCode;
            this.ParcelProtectionFeesBreakup = parcelProtectionFeesBreakup;
        }
        
        /// <summary>
        /// Gets or Sets TransactionID
        /// </summary>
        [DataMember(Name="transactionID", EmitDefaultValue=false)]
        public string TransactionID { get; set; }

        /// <summary>
        /// Gets or Sets ParcelProtectionReferenceID
        /// </summary>
        [DataMember(Name="parcelProtectionReferenceID", EmitDefaultValue=false)]
        public string ParcelProtectionReferenceID { get; set; }

        /// <summary>
        /// Gets or Sets ParcelProtectionDate
        /// </summary>
        [DataMember(Name="parcelProtectionDate", EmitDefaultValue=false)]
        public string ParcelProtectionDate { get; set; }

        /// <summary>
        /// Gets or Sets ParcelProtectionFees
        /// </summary>
        [DataMember(Name="parcelProtectionFees", EmitDefaultValue=false)]
        public decimal ParcelProtectionFees { get; set; }

        /// <summary>
        /// Gets or Sets ParcelProtectionFeesCurrencyCode
        /// </summary>
        [DataMember(Name="parcelProtectionFeesCurrencyCode", EmitDefaultValue=false)]
        public string ParcelProtectionFeesCurrencyCode { get; set; }

        /// <summary>
        /// Gets or Sets ParcelProtectionFeesBreakup
        /// </summary>
        [DataMember(Name="parcelProtectionFeesBreakup", EmitDefaultValue=false)]
        public ParcelProtectionCreateResponseParcelProtectionFeesBreakup ParcelProtectionFeesBreakup { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ParcelProtectionCreateResponse {\n");
            sb.Append("  TransactionID: ").Append(TransactionID).Append("\n");
            sb.Append("  ParcelProtectionReferenceID: ").Append(ParcelProtectionReferenceID).Append("\n");
            sb.Append("  ParcelProtectionDate: ").Append(ParcelProtectionDate).Append("\n");
            sb.Append("  ParcelProtectionFees: ").Append(ParcelProtectionFees).Append("\n");
            sb.Append("  ParcelProtectionFeesCurrencyCode: ").Append(ParcelProtectionFeesCurrencyCode).Append("\n");
            sb.Append("  ParcelProtectionFeesBreakup: ").Append(ParcelProtectionFeesBreakup).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ParcelProtectionCreateResponse);
        }

        /// <summary>
        /// Returns true if ParcelProtectionCreateResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ParcelProtectionCreateResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ParcelProtectionCreateResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TransactionID == input.TransactionID ||
                    (this.TransactionID != null &&
                    this.TransactionID.Equals(input.TransactionID))
                ) && 
                (
                    this.ParcelProtectionReferenceID == input.ParcelProtectionReferenceID ||
                    (this.ParcelProtectionReferenceID != null &&
                    this.ParcelProtectionReferenceID.Equals(input.ParcelProtectionReferenceID))
                ) && 
                (
                    this.ParcelProtectionDate == input.ParcelProtectionDate ||
                    (this.ParcelProtectionDate != null &&
                    this.ParcelProtectionDate.Equals(input.ParcelProtectionDate))
                ) && 
                (
                    this.ParcelProtectionFees == input.ParcelProtectionFees ||
                    (this.ParcelProtectionFees != null &&
                    this.ParcelProtectionFees.Equals(input.ParcelProtectionFees))
                ) && 
                (
                    this.ParcelProtectionFeesCurrencyCode == input.ParcelProtectionFeesCurrencyCode ||
                    (this.ParcelProtectionFeesCurrencyCode != null &&
                    this.ParcelProtectionFeesCurrencyCode.Equals(input.ParcelProtectionFeesCurrencyCode))
                ) && 
                (
                    this.ParcelProtectionFeesBreakup == input.ParcelProtectionFeesBreakup ||
                    (this.ParcelProtectionFeesBreakup != null &&
                    this.ParcelProtectionFeesBreakup.Equals(input.ParcelProtectionFeesBreakup))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TransactionID != null)
                    hashCode = hashCode * 59 + this.TransactionID.GetHashCode();
                if (this.ParcelProtectionReferenceID != null)
                    hashCode = hashCode * 59 + this.ParcelProtectionReferenceID.GetHashCode();
                if (this.ParcelProtectionDate != null)
                    hashCode = hashCode * 59 + this.ParcelProtectionDate.GetHashCode();
                if (this.ParcelProtectionFees != null)
                    hashCode = hashCode * 59 + this.ParcelProtectionFees.GetHashCode();
                if (this.ParcelProtectionFeesCurrencyCode != null)
                    hashCode = hashCode * 59 + this.ParcelProtectionFeesCurrencyCode.GetHashCode();
                if (this.ParcelProtectionFeesBreakup != null)
                    hashCode = hashCode * 59 + this.ParcelProtectionFeesBreakup.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
