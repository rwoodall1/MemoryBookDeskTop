/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = pitneyBower.Client.OpenAPIDateConverter;

namespace pitneyBower.Model
{
    /// <summary>
    /// CarrierFacilityResponseFacilityHours
    /// </summary>
    [DataContract]
    public partial class CarrierFacilityResponseFacilityHours :  IEquatable<CarrierFacilityResponseFacilityHours>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CarrierFacilityResponseFacilityHours" /> class.
        /// </summary>
        /// <param name="day">day.</param>
        /// <param name="facilityTimings">facilityTimings.</param>
        public CarrierFacilityResponseFacilityHours(string day = default(string), List<CarrierFacilityResponseFacilityTimings> facilityTimings = default(List<CarrierFacilityResponseFacilityTimings>))
        {
            this.Day = day;
            this.FacilityTimings = facilityTimings;
        }
        
        /// <summary>
        /// Gets or Sets Day
        /// </summary>
        [DataMember(Name="day", EmitDefaultValue=false)]
        public string Day { get; set; }

        /// <summary>
        /// Gets or Sets FacilityTimings
        /// </summary>
        [DataMember(Name="facilityTimings", EmitDefaultValue=false)]
        public List<CarrierFacilityResponseFacilityTimings> FacilityTimings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CarrierFacilityResponseFacilityHours {\n");
            sb.Append("  Day: ").Append(Day).Append("\n");
            sb.Append("  FacilityTimings: ").Append(FacilityTimings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CarrierFacilityResponseFacilityHours);
        }

        /// <summary>
        /// Returns true if CarrierFacilityResponseFacilityHours instances are equal
        /// </summary>
        /// <param name="input">Instance of CarrierFacilityResponseFacilityHours to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CarrierFacilityResponseFacilityHours input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Day == input.Day ||
                    (this.Day != null &&
                    this.Day.Equals(input.Day))
                ) && 
                (
                    this.FacilityTimings == input.FacilityTimings ||
                    this.FacilityTimings != null &&
                    input.FacilityTimings != null &&
                    this.FacilityTimings.SequenceEqual(input.FacilityTimings)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Day != null)
                    hashCode = hashCode * 59 + this.Day.GetHashCode();
                if (this.FacilityTimings != null)
                    hashCode = hashCode * 59 + this.FacilityTimings.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
