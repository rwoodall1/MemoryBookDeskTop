/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = pitneyBower.Client.OpenAPIDateConverter;

namespace pitneyBower.Model
{
    /// <summary>
    /// ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList
    /// </summary>
    [DataContract]
    public partial class ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList :  IEquatable<ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList" /> class.
        /// </summary>
        /// <param name="categoryPath">categoryPath.</param>
        /// <param name="itemCode">itemCode.</param>
        /// <param name="name">name.</param>
        /// <param name="url">url.</param>
        public ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList(string categoryPath = default(string), string itemCode = default(string), string name = default(string), string url = default(string))
        {
            this.CategoryPath = categoryPath;
            this.ItemCode = itemCode;
            this.Name = name;
            this.Url = url;
        }
        
        /// <summary>
        /// Gets or Sets CategoryPath
        /// </summary>
        [DataMember(Name="categoryPath", EmitDefaultValue=false)]
        public string CategoryPath { get; set; }

        /// <summary>
        /// Gets or Sets ItemCode
        /// </summary>
        [DataMember(Name="itemCode", EmitDefaultValue=false)]
        public string ItemCode { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name="url", EmitDefaultValue=false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList {\n");
            sb.Append("  CategoryPath: ").Append(CategoryPath).Append("\n");
            sb.Append("  ItemCode: ").Append(ItemCode).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList);
        }

        /// <summary>
        /// Returns true if ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList instances are equal
        /// </summary>
        /// <param name="input">Instance of ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ParcelProtectionCreateRequestShipmentInfoParcelInfoCommodityList input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CategoryPath == input.CategoryPath ||
                    (this.CategoryPath != null &&
                    this.CategoryPath.Equals(input.CategoryPath))
                ) && 
                (
                    this.ItemCode == input.ItemCode ||
                    (this.ItemCode != null &&
                    this.ItemCode.Equals(input.ItemCode))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CategoryPath != null)
                    hashCode = hashCode * 59 + this.CategoryPath.GetHashCode();
                if (this.ItemCode != null)
                    hashCode = hashCode * 59 + this.ItemCode.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
