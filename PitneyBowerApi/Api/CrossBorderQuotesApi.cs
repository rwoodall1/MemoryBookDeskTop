/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using pitneyBower.Client;
using pitneyBower.Model;

namespace pitneyBower.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICrossBorderQuotesApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Cross-Border Quotes
        /// </summary>
        /// <remarks>
        /// This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="crossBorderQuotesRequest"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>CrossBorderQuotesResponse</returns>
        CrossBorderQuotesResponse GetCrossBorderQuotes (CrossBorderQuotesRequest crossBorderQuotesRequest, bool? xPBUnifiedErrorStructure = default(bool?));

        /// <summary>
        /// Cross-Border Quotes
        /// </summary>
        /// <remarks>
        /// This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="crossBorderQuotesRequest"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>ApiResponse of CrossBorderQuotesResponse</returns>
        ApiResponse<CrossBorderQuotesResponse> GetCrossBorderQuotesWithHttpInfo (CrossBorderQuotesRequest crossBorderQuotesRequest, bool? xPBUnifiedErrorStructure = default(bool?));
        /// <summary>
        /// Predicts the HS Code for a parcel
        /// </summary>
        /// <remarks>
        /// This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="manifest">manifest</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>ParcelProtectionPolicyResponse</returns>
        ParcelProtectionPolicyResponse PredictedHSCode (string xPBTransactionId, Manifest manifest, bool? xPBUnifiedErrorStructure = default(bool?));

        /// <summary>
        /// Predicts the HS Code for a parcel
        /// </summary>
        /// <remarks>
        /// This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="manifest">manifest</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>ApiResponse of ParcelProtectionPolicyResponse</returns>
        ApiResponse<ParcelProtectionPolicyResponse> PredictedHSCodeWithHttpInfo (string xPBTransactionId, Manifest manifest, bool? xPBUnifiedErrorStructure = default(bool?));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Cross-Border Quotes
        /// </summary>
        /// <remarks>
        /// This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="crossBorderQuotesRequest"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>Task of CrossBorderQuotesResponse</returns>
        System.Threading.Tasks.Task<CrossBorderQuotesResponse> GetCrossBorderQuotesAsync (CrossBorderQuotesRequest crossBorderQuotesRequest, bool? xPBUnifiedErrorStructure = default(bool?));

        /// <summary>
        /// Cross-Border Quotes
        /// </summary>
        /// <remarks>
        /// This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="crossBorderQuotesRequest"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>Task of ApiResponse (CrossBorderQuotesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CrossBorderQuotesResponse>> GetCrossBorderQuotesAsyncWithHttpInfo (CrossBorderQuotesRequest crossBorderQuotesRequest, bool? xPBUnifiedErrorStructure = default(bool?));
        /// <summary>
        /// Predicts the HS Code for a parcel
        /// </summary>
        /// <remarks>
        /// This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="manifest">manifest</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>Task of ParcelProtectionPolicyResponse</returns>
        System.Threading.Tasks.Task<ParcelProtectionPolicyResponse> PredictedHSCodeAsync (string xPBTransactionId, Manifest manifest, bool? xPBUnifiedErrorStructure = default(bool?));

        /// <summary>
        /// Predicts the HS Code for a parcel
        /// </summary>
        /// <remarks>
        /// This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="manifest">manifest</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>Task of ApiResponse (ParcelProtectionPolicyResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ParcelProtectionPolicyResponse>> PredictedHSCodeAsyncWithHttpInfo (string xPBTransactionId, Manifest manifest, bool? xPBUnifiedErrorStructure = default(bool?));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class CrossBorderQuotesApi : ICrossBorderQuotesApi
    {
        private pitneyBower.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CrossBorderQuotesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CrossBorderQuotesApi(String basePath)
        {
            this.Configuration = new pitneyBower.Client.Configuration { BasePath = basePath };

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CrossBorderQuotesApi"/> class
        /// </summary>
        /// <returns></returns>
        public CrossBorderQuotesApi()
        {
            this.Configuration = pitneyBower.Client.Configuration.Default;

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CrossBorderQuotesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CrossBorderQuotesApi(pitneyBower.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = pitneyBower.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public pitneyBower.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public pitneyBower.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Cross-Border Quotes This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="crossBorderQuotesRequest"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>CrossBorderQuotesResponse</returns>
        public CrossBorderQuotesResponse GetCrossBorderQuotes (CrossBorderQuotesRequest crossBorderQuotesRequest, bool? xPBUnifiedErrorStructure = default(bool?))
        {
             ApiResponse<CrossBorderQuotesResponse> localVarResponse = GetCrossBorderQuotesWithHttpInfo(crossBorderQuotesRequest, xPBUnifiedErrorStructure);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Cross-Border Quotes This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="crossBorderQuotesRequest"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>ApiResponse of CrossBorderQuotesResponse</returns>
        public ApiResponse<CrossBorderQuotesResponse> GetCrossBorderQuotesWithHttpInfo (CrossBorderQuotesRequest crossBorderQuotesRequest, bool? xPBUnifiedErrorStructure = default(bool?))
        {
            // verify the required parameter 'crossBorderQuotesRequest' is set
            if (crossBorderQuotesRequest == null)
                throw new ApiException(400, "Missing required parameter 'crossBorderQuotesRequest' when calling CrossBorderQuotesApi->GetCrossBorderQuotes");

            var localVarPath = "/v1/crossborder/checkout/quotes";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (crossBorderQuotesRequest != null && crossBorderQuotesRequest.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(crossBorderQuotesRequest); // http body (model) parameter
            }
            else
            {
                localVarPostBody = crossBorderQuotesRequest; // byte array
            }

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCrossBorderQuotes", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<CrossBorderQuotesResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (CrossBorderQuotesResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(CrossBorderQuotesResponse)));
        }

        /// <summary>
        /// Cross-Border Quotes This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="crossBorderQuotesRequest"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>Task of CrossBorderQuotesResponse</returns>
        public async System.Threading.Tasks.Task<CrossBorderQuotesResponse> GetCrossBorderQuotesAsync (CrossBorderQuotesRequest crossBorderQuotesRequest, bool? xPBUnifiedErrorStructure = default(bool?))
        {
             ApiResponse<CrossBorderQuotesResponse> localVarResponse = await GetCrossBorderQuotesAsyncWithHttpInfo(crossBorderQuotesRequest, xPBUnifiedErrorStructure);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Cross-Border Quotes This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="crossBorderQuotesRequest"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>Task of ApiResponse (CrossBorderQuotesResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<CrossBorderQuotesResponse>> GetCrossBorderQuotesAsyncWithHttpInfo (CrossBorderQuotesRequest crossBorderQuotesRequest, bool? xPBUnifiedErrorStructure = default(bool?))
        {
            // verify the required parameter 'crossBorderQuotesRequest' is set
            if (crossBorderQuotesRequest == null)
                throw new ApiException(400, "Missing required parameter 'crossBorderQuotesRequest' when calling CrossBorderQuotesApi->GetCrossBorderQuotes");

            var localVarPath = "/v1/crossborder/checkout/quotes";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (crossBorderQuotesRequest != null && crossBorderQuotesRequest.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(crossBorderQuotesRequest); // http body (model) parameter
            }
            else
            {
                localVarPostBody = crossBorderQuotesRequest; // byte array
            }

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCrossBorderQuotes", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<CrossBorderQuotesResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (CrossBorderQuotesResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(CrossBorderQuotesResponse)));
        }

        /// <summary>
        /// Predicts the HS Code for a parcel This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="manifest">manifest</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>ParcelProtectionPolicyResponse</returns>
        public ParcelProtectionPolicyResponse PredictedHSCode (string xPBTransactionId, Manifest manifest, bool? xPBUnifiedErrorStructure = default(bool?))
        {
             ApiResponse<ParcelProtectionPolicyResponse> localVarResponse = PredictedHSCodeWithHttpInfo(xPBTransactionId, manifest, xPBUnifiedErrorStructure);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Predicts the HS Code for a parcel This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="manifest">manifest</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>ApiResponse of ParcelProtectionPolicyResponse</returns>
        public ApiResponse<ParcelProtectionPolicyResponse> PredictedHSCodeWithHttpInfo (string xPBTransactionId, Manifest manifest, bool? xPBUnifiedErrorStructure = default(bool?))
        {
            // verify the required parameter 'xPBTransactionId' is set
            if (xPBTransactionId == null)
                throw new ApiException(400, "Missing required parameter 'xPBTransactionId' when calling CrossBorderQuotesApi->PredictedHSCode");
            // verify the required parameter 'manifest' is set
            if (manifest == null)
                throw new ApiException(400, "Missing required parameter 'manifest' when calling CrossBorderQuotesApi->PredictedHSCode");

            var localVarPath = "/v1/crossborder/hs-classification/items";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "text/plain"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (xPBTransactionId != null) localVarHeaderParams.Add("X-PB-TransactionId", this.Configuration.ApiClient.ParameterToString(xPBTransactionId)); // header parameter
            if (manifest != null && manifest.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(manifest); // http body (model) parameter
            }
            else
            {
                localVarPostBody = manifest; // byte array
            }

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PredictedHSCode", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ParcelProtectionPolicyResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ParcelProtectionPolicyResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ParcelProtectionPolicyResponse)));
        }

        /// <summary>
        /// Predicts the HS Code for a parcel This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="manifest">manifest</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>Task of ParcelProtectionPolicyResponse</returns>
        public async System.Threading.Tasks.Task<ParcelProtectionPolicyResponse> PredictedHSCodeAsync (string xPBTransactionId, Manifest manifest, bool? xPBUnifiedErrorStructure = default(bool?))
        {
             ApiResponse<ParcelProtectionPolicyResponse> localVarResponse = await PredictedHSCodeAsyncWithHttpInfo(xPBTransactionId, manifest, xPBUnifiedErrorStructure);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Predicts the HS Code for a parcel This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="manifest">manifest</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <returns>Task of ApiResponse (ParcelProtectionPolicyResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<ParcelProtectionPolicyResponse>> PredictedHSCodeAsyncWithHttpInfo (string xPBTransactionId, Manifest manifest, bool? xPBUnifiedErrorStructure = default(bool?))
        {
            // verify the required parameter 'xPBTransactionId' is set
            if (xPBTransactionId == null)
                throw new ApiException(400, "Missing required parameter 'xPBTransactionId' when calling CrossBorderQuotesApi->PredictedHSCode");
            // verify the required parameter 'manifest' is set
            if (manifest == null)
                throw new ApiException(400, "Missing required parameter 'manifest' when calling CrossBorderQuotesApi->PredictedHSCode");

            var localVarPath = "/v1/crossborder/hs-classification/items";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "text/plain"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (xPBTransactionId != null) localVarHeaderParams.Add("X-PB-TransactionId", this.Configuration.ApiClient.ParameterToString(xPBTransactionId)); // header parameter
            if (manifest != null && manifest.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(manifest); // http body (model) parameter
            }
            else
            {
                localVarPostBody = manifest; // byte array
            }

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PredictedHSCode", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ParcelProtectionPolicyResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ParcelProtectionPolicyResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ParcelProtectionPolicyResponse)));
        }

    }
}
