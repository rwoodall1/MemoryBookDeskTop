/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using pitneyBower.Client;
using pitneyBower.Model;

namespace pitneyBower.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITransactionReportsApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// This operation retrieves all transactions for a specified period of time.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="developerId">developerId</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="fromDate">fromDate (optional)</param>
        /// <param name="shipDetails"> (optional, default to 0)</param>
        /// <param name="page"> (optional)</param>
        /// <param name="size"> (optional, default to 20)</param>
        /// <param name="printStatus">printStatus (optional)</param>
        /// <param name="toDate">toDate (optional)</param>
        /// <param name="transactionType">transactionType (optional)</param>
        /// <param name="merchantId">The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant&#39;s Shipper ID. (optional)</param>
        /// <param name="sort">Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort&#x3D;&lt;property_name&gt;,&lt;sort_direction&gt;** For example- **sort&#x3D;transactionId,desc**  (optional)</param>
        /// <param name="parcelTrackingNumber">Parcel tracking number of the shipment. (optional)</param>
        /// <param name="transactionId">The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment&#39;s X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId&#x3D;44397664_ad5aa07-ad7414-a78a-c22b3** (optional)</param>
        /// <returns>PageRealTransactionDetailReport</returns>
        PageRealTransactionDetailReport GetTransactionReport (string developerId, bool? xPBUnifiedErrorStructure = default(bool?), DateTime? fromDate = default(DateTime?), int? shipDetails = default(int?), int? page = default(int?), int? size = default(int?), string printStatus = default(string), DateTime? toDate = default(DateTime?), string transactionType = default(string), string merchantId = default(string), string sort = default(string), string parcelTrackingNumber = default(string), string transactionId = default(string));

        /// <summary>
        /// This operation retrieves all transactions for a specified period of time.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="developerId">developerId</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="fromDate">fromDate (optional)</param>
        /// <param name="shipDetails"> (optional, default to 0)</param>
        /// <param name="page"> (optional)</param>
        /// <param name="size"> (optional, default to 20)</param>
        /// <param name="printStatus">printStatus (optional)</param>
        /// <param name="toDate">toDate (optional)</param>
        /// <param name="transactionType">transactionType (optional)</param>
        /// <param name="merchantId">The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant&#39;s Shipper ID. (optional)</param>
        /// <param name="sort">Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort&#x3D;&lt;property_name&gt;,&lt;sort_direction&gt;** For example- **sort&#x3D;transactionId,desc**  (optional)</param>
        /// <param name="parcelTrackingNumber">Parcel tracking number of the shipment. (optional)</param>
        /// <param name="transactionId">The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment&#39;s X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId&#x3D;44397664_ad5aa07-ad7414-a78a-c22b3** (optional)</param>
        /// <returns>ApiResponse of PageRealTransactionDetailReport</returns>
        ApiResponse<PageRealTransactionDetailReport> GetTransactionReportWithHttpInfo (string developerId, bool? xPBUnifiedErrorStructure = default(bool?), DateTime? fromDate = default(DateTime?), int? shipDetails = default(int?), int? page = default(int?), int? size = default(int?), string printStatus = default(string), DateTime? toDate = default(DateTime?), string transactionType = default(string), string merchantId = default(string), string sort = default(string), string parcelTrackingNumber = default(string), string transactionId = default(string));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// This operation retrieves all transactions for a specified period of time.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="developerId">developerId</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="fromDate">fromDate (optional)</param>
        /// <param name="shipDetails"> (optional, default to 0)</param>
        /// <param name="page"> (optional)</param>
        /// <param name="size"> (optional, default to 20)</param>
        /// <param name="printStatus">printStatus (optional)</param>
        /// <param name="toDate">toDate (optional)</param>
        /// <param name="transactionType">transactionType (optional)</param>
        /// <param name="merchantId">The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant&#39;s Shipper ID. (optional)</param>
        /// <param name="sort">Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort&#x3D;&lt;property_name&gt;,&lt;sort_direction&gt;** For example- **sort&#x3D;transactionId,desc**  (optional)</param>
        /// <param name="parcelTrackingNumber">Parcel tracking number of the shipment. (optional)</param>
        /// <param name="transactionId">The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment&#39;s X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId&#x3D;44397664_ad5aa07-ad7414-a78a-c22b3** (optional)</param>
        /// <returns>Task of PageRealTransactionDetailReport</returns>
        System.Threading.Tasks.Task<PageRealTransactionDetailReport> GetTransactionReportAsync (string developerId, bool? xPBUnifiedErrorStructure = default(bool?), DateTime? fromDate = default(DateTime?), int? shipDetails = default(int?), int? page = default(int?), int? size = default(int?), string printStatus = default(string), DateTime? toDate = default(DateTime?), string transactionType = default(string), string merchantId = default(string), string sort = default(string), string parcelTrackingNumber = default(string), string transactionId = default(string));

        /// <summary>
        /// This operation retrieves all transactions for a specified period of time.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="developerId">developerId</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="fromDate">fromDate (optional)</param>
        /// <param name="shipDetails"> (optional, default to 0)</param>
        /// <param name="page"> (optional)</param>
        /// <param name="size"> (optional, default to 20)</param>
        /// <param name="printStatus">printStatus (optional)</param>
        /// <param name="toDate">toDate (optional)</param>
        /// <param name="transactionType">transactionType (optional)</param>
        /// <param name="merchantId">The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant&#39;s Shipper ID. (optional)</param>
        /// <param name="sort">Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort&#x3D;&lt;property_name&gt;,&lt;sort_direction&gt;** For example- **sort&#x3D;transactionId,desc**  (optional)</param>
        /// <param name="parcelTrackingNumber">Parcel tracking number of the shipment. (optional)</param>
        /// <param name="transactionId">The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment&#39;s X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId&#x3D;44397664_ad5aa07-ad7414-a78a-c22b3** (optional)</param>
        /// <returns>Task of ApiResponse (PageRealTransactionDetailReport)</returns>
        System.Threading.Tasks.Task<ApiResponse<PageRealTransactionDetailReport>> GetTransactionReportAsyncWithHttpInfo (string developerId, bool? xPBUnifiedErrorStructure = default(bool?), DateTime? fromDate = default(DateTime?), int? shipDetails = default(int?), int? page = default(int?), int? size = default(int?), string printStatus = default(string), DateTime? toDate = default(DateTime?), string transactionType = default(string), string merchantId = default(string), string sort = default(string), string parcelTrackingNumber = default(string), string transactionId = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TransactionReportsApi : ITransactionReportsApi
    {
        private pitneyBower.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionReportsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TransactionReportsApi(String basePath)
        {
            this.Configuration = new pitneyBower.Client.Configuration { BasePath = basePath };

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionReportsApi"/> class
        /// </summary>
        /// <returns></returns>
        public TransactionReportsApi()
        {
            this.Configuration = pitneyBower.Client.Configuration.Default;

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionReportsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public TransactionReportsApi(pitneyBower.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = pitneyBower.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public pitneyBower.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public pitneyBower.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// This operation retrieves all transactions for a specified period of time. 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="developerId">developerId</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="fromDate">fromDate (optional)</param>
        /// <param name="shipDetails"> (optional, default to 0)</param>
        /// <param name="page"> (optional)</param>
        /// <param name="size"> (optional, default to 20)</param>
        /// <param name="printStatus">printStatus (optional)</param>
        /// <param name="toDate">toDate (optional)</param>
        /// <param name="transactionType">transactionType (optional)</param>
        /// <param name="merchantId">The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant&#39;s Shipper ID. (optional)</param>
        /// <param name="sort">Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort&#x3D;&lt;property_name&gt;,&lt;sort_direction&gt;** For example- **sort&#x3D;transactionId,desc**  (optional)</param>
        /// <param name="parcelTrackingNumber">Parcel tracking number of the shipment. (optional)</param>
        /// <param name="transactionId">The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment&#39;s X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId&#x3D;44397664_ad5aa07-ad7414-a78a-c22b3** (optional)</param>
        /// <returns>PageRealTransactionDetailReport</returns>
        public PageRealTransactionDetailReport GetTransactionReport (string developerId, bool? xPBUnifiedErrorStructure = default(bool?), DateTime? fromDate = default(DateTime?), int? shipDetails = default(int?), int? page = default(int?), int? size = default(int?), string printStatus = default(string), DateTime? toDate = default(DateTime?), string transactionType = default(string), string merchantId = default(string), string sort = default(string), string parcelTrackingNumber = default(string), string transactionId = default(string))
        {
             ApiResponse<PageRealTransactionDetailReport> localVarResponse = GetTransactionReportWithHttpInfo(developerId, xPBUnifiedErrorStructure, fromDate, shipDetails, page, size, printStatus, toDate, transactionType, merchantId, sort, parcelTrackingNumber, transactionId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This operation retrieves all transactions for a specified period of time. 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="developerId">developerId</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="fromDate">fromDate (optional)</param>
        /// <param name="shipDetails"> (optional, default to 0)</param>
        /// <param name="page"> (optional)</param>
        /// <param name="size"> (optional, default to 20)</param>
        /// <param name="printStatus">printStatus (optional)</param>
        /// <param name="toDate">toDate (optional)</param>
        /// <param name="transactionType">transactionType (optional)</param>
        /// <param name="merchantId">The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant&#39;s Shipper ID. (optional)</param>
        /// <param name="sort">Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort&#x3D;&lt;property_name&gt;,&lt;sort_direction&gt;** For example- **sort&#x3D;transactionId,desc**  (optional)</param>
        /// <param name="parcelTrackingNumber">Parcel tracking number of the shipment. (optional)</param>
        /// <param name="transactionId">The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment&#39;s X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId&#x3D;44397664_ad5aa07-ad7414-a78a-c22b3** (optional)</param>
        /// <returns>ApiResponse of PageRealTransactionDetailReport</returns>
        public ApiResponse<PageRealTransactionDetailReport> GetTransactionReportWithHttpInfo (string developerId, bool? xPBUnifiedErrorStructure = default(bool?), DateTime? fromDate = default(DateTime?), int? shipDetails = default(int?), int? page = default(int?), int? size = default(int?), string printStatus = default(string), DateTime? toDate = default(DateTime?), string transactionType = default(string), string merchantId = default(string), string sort = default(string), string parcelTrackingNumber = default(string), string transactionId = default(string))
        {
            // verify the required parameter 'developerId' is set
            if (developerId == null)
                throw new ApiException(400, "Missing required parameter 'developerId' when calling TransactionReportsApi->GetTransactionReport");

            var localVarPath = "/v4/ledger/developers/{developerId}/transactions/reports";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (developerId != null) localVarPathParams.Add("developerId", this.Configuration.ApiClient.ParameterToString(developerId)); // path parameter
            if (fromDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fromDate", fromDate)); // query parameter
            if (shipDetails != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "shipDetails", shipDetails)); // query parameter
            if (page != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "page", page)); // query parameter
            if (size != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "size", size)); // query parameter
            if (printStatus != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "printStatus", printStatus)); // query parameter
            if (toDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "toDate", toDate)); // query parameter
            if (transactionType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "transactionType", transactionType)); // query parameter
            if (merchantId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "merchantId", merchantId)); // query parameter
            if (sort != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sort", sort)); // query parameter
            if (parcelTrackingNumber != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "parcelTrackingNumber", parcelTrackingNumber)); // query parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (transactionId != null) localVarHeaderParams.Add("transactionId", this.Configuration.ApiClient.ParameterToString(transactionId)); // header parameter

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetTransactionReport", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<PageRealTransactionDetailReport>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (PageRealTransactionDetailReport) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(PageRealTransactionDetailReport)));
        }

        /// <summary>
        /// This operation retrieves all transactions for a specified period of time. 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="developerId">developerId</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="fromDate">fromDate (optional)</param>
        /// <param name="shipDetails"> (optional, default to 0)</param>
        /// <param name="page"> (optional)</param>
        /// <param name="size"> (optional, default to 20)</param>
        /// <param name="printStatus">printStatus (optional)</param>
        /// <param name="toDate">toDate (optional)</param>
        /// <param name="transactionType">transactionType (optional)</param>
        /// <param name="merchantId">The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant&#39;s Shipper ID. (optional)</param>
        /// <param name="sort">Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort&#x3D;&lt;property_name&gt;,&lt;sort_direction&gt;** For example- **sort&#x3D;transactionId,desc**  (optional)</param>
        /// <param name="parcelTrackingNumber">Parcel tracking number of the shipment. (optional)</param>
        /// <param name="transactionId">The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment&#39;s X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId&#x3D;44397664_ad5aa07-ad7414-a78a-c22b3** (optional)</param>
        /// <returns>Task of PageRealTransactionDetailReport</returns>
        public async System.Threading.Tasks.Task<PageRealTransactionDetailReport> GetTransactionReportAsync (string developerId, bool? xPBUnifiedErrorStructure = default(bool?), DateTime? fromDate = default(DateTime?), int? shipDetails = default(int?), int? page = default(int?), int? size = default(int?), string printStatus = default(string), DateTime? toDate = default(DateTime?), string transactionType = default(string), string merchantId = default(string), string sort = default(string), string parcelTrackingNumber = default(string), string transactionId = default(string))
        {
             ApiResponse<PageRealTransactionDetailReport> localVarResponse = await GetTransactionReportAsyncWithHttpInfo(developerId, xPBUnifiedErrorStructure, fromDate, shipDetails, page, size, printStatus, toDate, transactionType, merchantId, sort, parcelTrackingNumber, transactionId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This operation retrieves all transactions for a specified period of time. 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="developerId">developerId</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="fromDate">fromDate (optional)</param>
        /// <param name="shipDetails"> (optional, default to 0)</param>
        /// <param name="page"> (optional)</param>
        /// <param name="size"> (optional, default to 20)</param>
        /// <param name="printStatus">printStatus (optional)</param>
        /// <param name="toDate">toDate (optional)</param>
        /// <param name="transactionType">transactionType (optional)</param>
        /// <param name="merchantId">The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant&#39;s Shipper ID. (optional)</param>
        /// <param name="sort">Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort&#x3D;&lt;property_name&gt;,&lt;sort_direction&gt;** For example- **sort&#x3D;transactionId,desc**  (optional)</param>
        /// <param name="parcelTrackingNumber">Parcel tracking number of the shipment. (optional)</param>
        /// <param name="transactionId">The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment&#39;s X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId&#x3D;44397664_ad5aa07-ad7414-a78a-c22b3** (optional)</param>
        /// <returns>Task of ApiResponse (PageRealTransactionDetailReport)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<PageRealTransactionDetailReport>> GetTransactionReportAsyncWithHttpInfo (string developerId, bool? xPBUnifiedErrorStructure = default(bool?), DateTime? fromDate = default(DateTime?), int? shipDetails = default(int?), int? page = default(int?), int? size = default(int?), string printStatus = default(string), DateTime? toDate = default(DateTime?), string transactionType = default(string), string merchantId = default(string), string sort = default(string), string parcelTrackingNumber = default(string), string transactionId = default(string))
        {
            // verify the required parameter 'developerId' is set
            if (developerId == null)
                throw new ApiException(400, "Missing required parameter 'developerId' when calling TransactionReportsApi->GetTransactionReport");

            var localVarPath = "/v4/ledger/developers/{developerId}/transactions/reports";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (developerId != null) localVarPathParams.Add("developerId", this.Configuration.ApiClient.ParameterToString(developerId)); // path parameter
            if (fromDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fromDate", fromDate)); // query parameter
            if (shipDetails != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "shipDetails", shipDetails)); // query parameter
            if (page != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "page", page)); // query parameter
            if (size != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "size", size)); // query parameter
            if (printStatus != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "printStatus", printStatus)); // query parameter
            if (toDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "toDate", toDate)); // query parameter
            if (transactionType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "transactionType", transactionType)); // query parameter
            if (merchantId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "merchantId", merchantId)); // query parameter
            if (sort != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sort", sort)); // query parameter
            if (parcelTrackingNumber != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "parcelTrackingNumber", parcelTrackingNumber)); // query parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (transactionId != null) localVarHeaderParams.Add("transactionId", this.Configuration.ApiClient.ParameterToString(transactionId)); // header parameter

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetTransactionReport", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<PageRealTransactionDetailReport>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (PageRealTransactionDetailReport) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(PageRealTransactionDetailReport)));
        }

    }
}
