/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using pitneyBower.Client;
using pitneyBower.Model;
using Newtonsoft.Json;

namespace pitneyBower.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IShipmentApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// cancelShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipmentId">shipmentId</param>
        /// <param name="xPBUnifiedErrorStructure">Recommended. Set this to true to use the standard error object if an error occurs. (optional, default to &quot;true&quot;)</param>
        /// <param name="xPBShipperCarrierAccountId">UPS Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account API.(https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) (optional)</param>
        /// <param name="cancelInitiator">Indicates that this refund request is initiated by the shipper. Set this to: SHIPPER (optional)</param>
        /// <param name="carrier">Conditional. The carrier. This is required if the carrier is not USPS (optional)</param>
        /// <returns>CancelShipment</returns>
        CancelShipment CancelShipment (string xPBTransactionId, string shipmentId, string xPBUnifiedErrorStructure = default(string), string xPBShipperCarrierAccountId = default(string), string cancelInitiator = default(string), Carrier? carrier = default(Carrier?));

        /// <summary>
        /// cancelShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipmentId">shipmentId</param>
        /// <param name="xPBUnifiedErrorStructure">Recommended. Set this to true to use the standard error object if an error occurs. (optional, default to &quot;true&quot;)</param>
        /// <param name="xPBShipperCarrierAccountId">UPS Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account API.(https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) (optional)</param>
        /// <param name="cancelInitiator">Indicates that this refund request is initiated by the shipper. Set this to: SHIPPER (optional)</param>
        /// <param name="carrier">Conditional. The carrier. This is required if the carrier is not USPS (optional)</param>
        /// <returns>ApiResponse of CancelShipment</returns>
        ApiResponse<CancelShipment> CancelShipmentWithHttpInfo (string xPBTransactionId, string shipmentId, string xPBUnifiedErrorStructure = default(string), string xPBShipperCarrierAccountId = default(string), string cancelInitiator = default(string), Carrier? carrier = default(Carrier?));
        /// <summary>
        /// This operation creates a shipment and purchases a shipment label.
        /// </summary>
        /// <remarks>
        /// The API returns the label as either a Base64 string or a link to a PDF. For more information visit [Create Shipment Documents](https://shipping.pitneybowes.com/api/post-shipments.html). Following are samples of different carriers -  * [Create a USPS (U.S. Postal Service) Label](https://shipping.pitneybowes.com/api/post-shipments-usps.html)  * [Create a USPS PMOD Label](https://shipping.pitneybowes.com/api/post-shipments-pmod.html) * [Create a USPS Scan-Based Return Label](https://shipping.pitneybowes.com/api/post-shipments-returns.html) * [Create a Pure Post Return Label](https://shipping.pitneybowes.com/api/post-shipments-pure-post-return.html) * [Create a Newgistics Label](https://shipping.pitneybowes.com/api/post-shipments-newgistics.html) * [Create a PB Presort Label](https://shipping.pitneybowes.com/api/post-shipments-presort.html) * [Create a PB Cross-Border Shipment](https://shipping.pitneybowes.com/api/post-shipments-cbds.html) * [Create a UPS (United Parcel Service) Label](https://shipping.pitneybowes.com/api/post-shipments-ups.html)
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipment">request</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="xPBIntegratorCarrierId">USPS Only. Negotiated services rate, if applicable. (optional)</param>
        /// <param name="xPBShipperRatePlan">USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq). (optional)</param>
        /// <param name="xPBShipmentGroupId"> **[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**.The job number that represents the agreement between the merchant and PB Presort. This was provided by Pitney Bowes during [merchant onboarding for PB Presort](https://shipping.pitneybowes.com/carriers/pb-presort.html). (optional)</param>
        /// <param name="xPBShipperCarrierAccountId">**[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**. The merchant&#39;s Mailer ID (MID), as provided by Pitney Bowes during merchant onboarding for PB Presort. (optional)</param>
        /// <param name="includeDeliveryCommitment">If set to true, returns estimated transit times in days. Only for USPS Create Shipment. See also [Pitney Bowes Delivery Guarantee](https://shipping.pitneybowes.com/faqs/delivery-guarantee.html) [Do all USPS services return transit times?](https://shipping.pitneybowes.com/faqs/shipments.html#transit-times-faq) (optional)</param>
        /// <returns>Shipment</returns>
        Shipment CreateShipmentLabel (string xPBTransactionId, Shipment shipment, bool? xPBUnifiedErrorStructure = default(bool?), string xPBIntegratorCarrierId = default(string), string xPBShipperRatePlan = default(string), string xPBShipmentGroupId = default(string), string xPBShipperCarrierAccountId = default(string), string includeDeliveryCommitment = default(string));

        /// <summary>
        /// This operation creates a shipment and purchases a shipment label.
        /// </summary>
        /// <remarks>
        /// The API returns the label as either a Base64 string or a link to a PDF. For more information visit [Create Shipment Documents](https://shipping.pitneybowes.com/api/post-shipments.html). Following are samples of different carriers -  * [Create a USPS (U.S. Postal Service) Label](https://shipping.pitneybowes.com/api/post-shipments-usps.html)  * [Create a USPS PMOD Label](https://shipping.pitneybowes.com/api/post-shipments-pmod.html) * [Create a USPS Scan-Based Return Label](https://shipping.pitneybowes.com/api/post-shipments-returns.html) * [Create a Pure Post Return Label](https://shipping.pitneybowes.com/api/post-shipments-pure-post-return.html) * [Create a Newgistics Label](https://shipping.pitneybowes.com/api/post-shipments-newgistics.html) * [Create a PB Presort Label](https://shipping.pitneybowes.com/api/post-shipments-presort.html) * [Create a PB Cross-Border Shipment](https://shipping.pitneybowes.com/api/post-shipments-cbds.html) * [Create a UPS (United Parcel Service) Label](https://shipping.pitneybowes.com/api/post-shipments-ups.html)
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipment">request</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="xPBIntegratorCarrierId">USPS Only. Negotiated services rate, if applicable. (optional)</param>
        /// <param name="xPBShipperRatePlan">USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq). (optional)</param>
        /// <param name="xPBShipmentGroupId"> **[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**.The job number that represents the agreement between the merchant and PB Presort. This was provided by Pitney Bowes during [merchant onboarding for PB Presort](https://shipping.pitneybowes.com/carriers/pb-presort.html). (optional)</param>
        /// <param name="xPBShipperCarrierAccountId">**[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**. The merchant&#39;s Mailer ID (MID), as provided by Pitney Bowes during merchant onboarding for PB Presort. (optional)</param>
        /// <param name="includeDeliveryCommitment">If set to true, returns estimated transit times in days. Only for USPS Create Shipment. See also [Pitney Bowes Delivery Guarantee](https://shipping.pitneybowes.com/faqs/delivery-guarantee.html) [Do all USPS services return transit times?](https://shipping.pitneybowes.com/faqs/shipments.html#transit-times-faq) (optional)</param>
        /// <returns>ApiResponse of Shipment</returns>
        ApiResponse<Shipment> CreateShipmentLabelWithHttpInfo (string xPBTransactionId, Shipment shipment, bool? xPBUnifiedErrorStructure = default(bool?), string xPBIntegratorCarrierId = default(string), string xPBShipperRatePlan = default(string), string xPBShipmentGroupId = default(string), string xPBShipperCarrierAccountId = default(string), string includeDeliveryCommitment = default(string));
        /// <summary>
        /// reprintShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="shipmentId">Required. The shipment ID that was issued when shipment label was generated.</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Shipment</returns>
        Shipment ReprintShipment (string shipmentId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?));

        /// <summary>
        /// reprintShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="shipmentId">Required. The shipment ID that was issued when shipment label was generated.</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>ApiResponse of Shipment</returns>
        ApiResponse<Shipment> ReprintShipmentWithHttpInfo (string shipmentId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?));
        /// <summary>
        /// retryShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="originalTransactionId"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Shipment</returns>
        Shipment RetryShipment (string originalTransactionId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?));

        /// <summary>
        /// retryShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="originalTransactionId"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>ApiResponse of Shipment</returns>
        ApiResponse<Shipment> RetryShipmentWithHttpInfo (string originalTransactionId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// cancelShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipmentId">shipmentId</param>
        /// <param name="xPBUnifiedErrorStructure">Recommended. Set this to true to use the standard error object if an error occurs. (optional, default to &quot;true&quot;)</param>
        /// <param name="xPBShipperCarrierAccountId">UPS Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account API.(https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) (optional)</param>
        /// <param name="cancelInitiator">Indicates that this refund request is initiated by the shipper. Set this to: SHIPPER (optional)</param>
        /// <param name="carrier">Conditional. The carrier. This is required if the carrier is not USPS (optional)</param>
        /// <returns>Task of CancelShipment</returns>
        System.Threading.Tasks.Task<CancelShipment> CancelShipmentAsync (string xPBTransactionId, string shipmentId, string xPBUnifiedErrorStructure = default(string), string xPBShipperCarrierAccountId = default(string), string cancelInitiator = default(string), Carrier? carrier = default(Carrier?));

        /// <summary>
        /// cancelShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipmentId">shipmentId</param>
        /// <param name="xPBUnifiedErrorStructure">Recommended. Set this to true to use the standard error object if an error occurs. (optional, default to &quot;true&quot;)</param>
        /// <param name="xPBShipperCarrierAccountId">UPS Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account API.(https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) (optional)</param>
        /// <param name="cancelInitiator">Indicates that this refund request is initiated by the shipper. Set this to: SHIPPER (optional)</param>
        /// <param name="carrier">Conditional. The carrier. This is required if the carrier is not USPS (optional)</param>
        /// <returns>Task of ApiResponse (CancelShipment)</returns>
        System.Threading.Tasks.Task<ApiResponse<CancelShipment>> CancelShipmentAsyncWithHttpInfo (string xPBTransactionId, string shipmentId, string xPBUnifiedErrorStructure = default(string), string xPBShipperCarrierAccountId = default(string), string cancelInitiator = default(string), Carrier? carrier = default(Carrier?));
        /// <summary>
        /// This operation creates a shipment and purchases a shipment label.
        /// </summary>
        /// <remarks>
        /// The API returns the label as either a Base64 string or a link to a PDF. For more information visit [Create Shipment Documents](https://shipping.pitneybowes.com/api/post-shipments.html). Following are samples of different carriers -  * [Create a USPS (U.S. Postal Service) Label](https://shipping.pitneybowes.com/api/post-shipments-usps.html)  * [Create a USPS PMOD Label](https://shipping.pitneybowes.com/api/post-shipments-pmod.html) * [Create a USPS Scan-Based Return Label](https://shipping.pitneybowes.com/api/post-shipments-returns.html) * [Create a Pure Post Return Label](https://shipping.pitneybowes.com/api/post-shipments-pure-post-return.html) * [Create a Newgistics Label](https://shipping.pitneybowes.com/api/post-shipments-newgistics.html) * [Create a PB Presort Label](https://shipping.pitneybowes.com/api/post-shipments-presort.html) * [Create a PB Cross-Border Shipment](https://shipping.pitneybowes.com/api/post-shipments-cbds.html) * [Create a UPS (United Parcel Service) Label](https://shipping.pitneybowes.com/api/post-shipments-ups.html)
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipment">request</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="xPBIntegratorCarrierId">USPS Only. Negotiated services rate, if applicable. (optional)</param>
        /// <param name="xPBShipperRatePlan">USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq). (optional)</param>
        /// <param name="xPBShipmentGroupId"> **[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**.The job number that represents the agreement between the merchant and PB Presort. This was provided by Pitney Bowes during [merchant onboarding for PB Presort](https://shipping.pitneybowes.com/carriers/pb-presort.html). (optional)</param>
        /// <param name="xPBShipperCarrierAccountId">**[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**. The merchant&#39;s Mailer ID (MID), as provided by Pitney Bowes during merchant onboarding for PB Presort. (optional)</param>
        /// <param name="includeDeliveryCommitment">If set to true, returns estimated transit times in days. Only for USPS Create Shipment. See also [Pitney Bowes Delivery Guarantee](https://shipping.pitneybowes.com/faqs/delivery-guarantee.html) [Do all USPS services return transit times?](https://shipping.pitneybowes.com/faqs/shipments.html#transit-times-faq) (optional)</param>
        /// <returns>Task of Shipment</returns>
        System.Threading.Tasks.Task<Shipment> CreateShipmentLabelAsync (string xPBTransactionId, Shipment shipment, bool? xPBUnifiedErrorStructure = default(bool?), string xPBIntegratorCarrierId = default(string), string xPBShipperRatePlan = default(string), string xPBShipmentGroupId = default(string), string xPBShipperCarrierAccountId = default(string), string includeDeliveryCommitment = default(string));

        /// <summary>
        /// This operation creates a shipment and purchases a shipment label.
        /// </summary>
        /// <remarks>
        /// The API returns the label as either a Base64 string or a link to a PDF. For more information visit [Create Shipment Documents](https://shipping.pitneybowes.com/api/post-shipments.html). Following are samples of different carriers -  * [Create a USPS (U.S. Postal Service) Label](https://shipping.pitneybowes.com/api/post-shipments-usps.html)  * [Create a USPS PMOD Label](https://shipping.pitneybowes.com/api/post-shipments-pmod.html) * [Create a USPS Scan-Based Return Label](https://shipping.pitneybowes.com/api/post-shipments-returns.html) * [Create a Pure Post Return Label](https://shipping.pitneybowes.com/api/post-shipments-pure-post-return.html) * [Create a Newgistics Label](https://shipping.pitneybowes.com/api/post-shipments-newgistics.html) * [Create a PB Presort Label](https://shipping.pitneybowes.com/api/post-shipments-presort.html) * [Create a PB Cross-Border Shipment](https://shipping.pitneybowes.com/api/post-shipments-cbds.html) * [Create a UPS (United Parcel Service) Label](https://shipping.pitneybowes.com/api/post-shipments-ups.html)
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipment">request</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="xPBIntegratorCarrierId">USPS Only. Negotiated services rate, if applicable. (optional)</param>
        /// <param name="xPBShipperRatePlan">USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq). (optional)</param>
        /// <param name="xPBShipmentGroupId"> **[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**.The job number that represents the agreement between the merchant and PB Presort. This was provided by Pitney Bowes during [merchant onboarding for PB Presort](https://shipping.pitneybowes.com/carriers/pb-presort.html). (optional)</param>
        /// <param name="xPBShipperCarrierAccountId">**[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**. The merchant&#39;s Mailer ID (MID), as provided by Pitney Bowes during merchant onboarding for PB Presort. (optional)</param>
        /// <param name="includeDeliveryCommitment">If set to true, returns estimated transit times in days. Only for USPS Create Shipment. See also [Pitney Bowes Delivery Guarantee](https://shipping.pitneybowes.com/faqs/delivery-guarantee.html) [Do all USPS services return transit times?](https://shipping.pitneybowes.com/faqs/shipments.html#transit-times-faq) (optional)</param>
        /// <returns>Task of ApiResponse (Shipment)</returns>
        System.Threading.Tasks.Task<ApiResponse<Shipment>> CreateShipmentLabelAsyncWithHttpInfo (string xPBTransactionId, Shipment shipment, bool? xPBUnifiedErrorStructure = default(bool?), string xPBIntegratorCarrierId = default(string), string xPBShipperRatePlan = default(string), string xPBShipmentGroupId = default(string), string xPBShipperCarrierAccountId = default(string), string includeDeliveryCommitment = default(string));
        /// <summary>
        /// reprintShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="shipmentId">Required. The shipment ID that was issued when shipment label was generated.</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Task of Shipment</returns>
        System.Threading.Tasks.Task<Shipment> ReprintShipmentAsync (string shipmentId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?));

        /// <summary>
        /// reprintShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="shipmentId">Required. The shipment ID that was issued when shipment label was generated.</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Task of ApiResponse (Shipment)</returns>
        System.Threading.Tasks.Task<ApiResponse<Shipment>> ReprintShipmentAsyncWithHttpInfo (string shipmentId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?));
        /// <summary>
        /// retryShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="originalTransactionId"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Task of Shipment</returns>
        System.Threading.Tasks.Task<Shipment> RetryShipmentAsync (string originalTransactionId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?));

        /// <summary>
        /// retryShipment
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="originalTransactionId"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Task of ApiResponse (Shipment)</returns>
        System.Threading.Tasks.Task<ApiResponse<Shipment>> RetryShipmentAsyncWithHttpInfo (string originalTransactionId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ShipmentApi : IShipmentApi
    {
        private pitneyBower.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ShipmentApi(String basePath)
        {
            this.Configuration = new pitneyBower.Client.Configuration { BasePath = basePath };

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentApi"/> class
        /// </summary>
        /// <returns></returns>
        public ShipmentApi()
        {
            this.Configuration = pitneyBower.Client.Configuration.Default;

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ShipmentApi(pitneyBower.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = pitneyBower.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = pitneyBower.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public pitneyBower.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public pitneyBower.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// cancelShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipmentId">shipmentId</param>
        /// <param name="xPBUnifiedErrorStructure">Recommended. Set this to true to use the standard error object if an error occurs. (optional, default to &quot;true&quot;)</param>
        /// <param name="xPBShipperCarrierAccountId">UPS Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account API.(https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) (optional)</param>
        /// <param name="cancelInitiator">Indicates that this refund request is initiated by the shipper. Set this to: SHIPPER (optional)</param>
        /// <param name="carrier">Conditional. The carrier. This is required if the carrier is not USPS (optional)</param>
        /// <returns>CancelShipment</returns>
        public CancelShipment CancelShipment (string xPBTransactionId, string shipmentId, string xPBUnifiedErrorStructure = default(string), string xPBShipperCarrierAccountId = default(string), string cancelInitiator = default(string), Carrier? carrier = default(Carrier?))
        {
             ApiResponse<CancelShipment> localVarResponse = CancelShipmentWithHttpInfo(xPBTransactionId, shipmentId, xPBUnifiedErrorStructure, xPBShipperCarrierAccountId, cancelInitiator, carrier);
             return localVarResponse.Data;
        }

        /// <summary>
        /// cancelShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipmentId">shipmentId</param>
        /// <param name="xPBUnifiedErrorStructure">Recommended. Set this to true to use the standard error object if an error occurs. (optional, default to &quot;true&quot;)</param>
        /// <param name="xPBShipperCarrierAccountId">UPS Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account API.(https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) (optional)</param>
        /// <param name="cancelInitiator">Indicates that this refund request is initiated by the shipper. Set this to: SHIPPER (optional)</param>
        /// <param name="carrier">Conditional. The carrier. This is required if the carrier is not USPS (optional)</param>
        /// <returns>ApiResponse of CancelShipment</returns>
        public ApiResponse<CancelShipment> CancelShipmentWithHttpInfo (string xPBTransactionId, string shipmentId, string xPBUnifiedErrorStructure = default(string), string xPBShipperCarrierAccountId = default(string), string cancelInitiator = default(string), Carrier? carrier = default(Carrier?))
        {
            // verify the required parameter 'xPBTransactionId' is set
            if (xPBTransactionId == null)
                throw new ApiException(400, "Missing required parameter 'xPBTransactionId' when calling ShipmentApi->CancelShipment");
            // verify the required parameter 'shipmentId' is set
            if (shipmentId == null)
                throw new ApiException(400, "Missing required parameter 'shipmentId' when calling ShipmentApi->CancelShipment");

            var localVarPath = "/v1/shipments/{shipmentId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (shipmentId != null) localVarPathParams.Add("shipmentId", this.Configuration.ApiClient.ParameterToString(shipmentId)); // path parameter
            if (cancelInitiator != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "cancelInitiator", cancelInitiator)); // query parameter
            if (carrier != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "carrier", carrier)); // query parameter
            if (xPBTransactionId != null) localVarHeaderParams.Add("X-PB-TransactionId", this.Configuration.ApiClient.ParameterToString(xPBTransactionId)); // header parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (xPBShipperCarrierAccountId != null) localVarHeaderParams.Add("X-PB-Shipper-Carrier-AccountId", this.Configuration.ApiClient.ParameterToString(xPBShipperCarrierAccountId)); // header parameter

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CancelShipment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<CancelShipment>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (CancelShipment) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(CancelShipment)));
        }

        /// <summary>
        /// cancelShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipmentId">shipmentId</param>
        /// <param name="xPBUnifiedErrorStructure">Recommended. Set this to true to use the standard error object if an error occurs. (optional, default to &quot;true&quot;)</param>
        /// <param name="xPBShipperCarrierAccountId">UPS Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account API.(https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) (optional)</param>
        /// <param name="cancelInitiator">Indicates that this refund request is initiated by the shipper. Set this to: SHIPPER (optional)</param>
        /// <param name="carrier">Conditional. The carrier. This is required if the carrier is not USPS (optional)</param>
        /// <returns>Task of CancelShipment</returns>
        public async System.Threading.Tasks.Task<CancelShipment> CancelShipmentAsync (string xPBTransactionId, string shipmentId, string xPBUnifiedErrorStructure = default(string), string xPBShipperCarrierAccountId = default(string), string cancelInitiator = default(string), Carrier? carrier = default(Carrier?))
        {
             ApiResponse<CancelShipment> localVarResponse = await CancelShipmentAsyncWithHttpInfo(xPBTransactionId, shipmentId, xPBUnifiedErrorStructure, xPBShipperCarrierAccountId, cancelInitiator, carrier);
             return localVarResponse.Data;

        }

        /// <summary>
        /// cancelShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipmentId">shipmentId</param>
        /// <param name="xPBUnifiedErrorStructure">Recommended. Set this to true to use the standard error object if an error occurs. (optional, default to &quot;true&quot;)</param>
        /// <param name="xPBShipperCarrierAccountId">UPS Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account API.(https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) (optional)</param>
        /// <param name="cancelInitiator">Indicates that this refund request is initiated by the shipper. Set this to: SHIPPER (optional)</param>
        /// <param name="carrier">Conditional. The carrier. This is required if the carrier is not USPS (optional)</param>
        /// <returns>Task of ApiResponse (CancelShipment)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<CancelShipment>> CancelShipmentAsyncWithHttpInfo (string xPBTransactionId, string shipmentId, string xPBUnifiedErrorStructure = default(string), string xPBShipperCarrierAccountId = default(string), string cancelInitiator = default(string), Carrier? carrier = default(Carrier?))
        {
            // verify the required parameter 'xPBTransactionId' is set
            if (xPBTransactionId == null)
                throw new ApiException(400, "Missing required parameter 'xPBTransactionId' when calling ShipmentApi->CancelShipment");
            // verify the required parameter 'shipmentId' is set
            if (shipmentId == null)
                throw new ApiException(400, "Missing required parameter 'shipmentId' when calling ShipmentApi->CancelShipment");

            var localVarPath = "/v1/shipments/{shipmentId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (shipmentId != null) localVarPathParams.Add("shipmentId", this.Configuration.ApiClient.ParameterToString(shipmentId)); // path parameter
            if (cancelInitiator != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "cancelInitiator", cancelInitiator)); // query parameter
            if (carrier != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "carrier", carrier)); // query parameter
            if (xPBTransactionId != null) localVarHeaderParams.Add("X-PB-TransactionId", this.Configuration.ApiClient.ParameterToString(xPBTransactionId)); // header parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (xPBShipperCarrierAccountId != null) localVarHeaderParams.Add("X-PB-Shipper-Carrier-AccountId", this.Configuration.ApiClient.ParameterToString(xPBShipperCarrierAccountId)); // header parameter

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CancelShipment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<CancelShipment>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (CancelShipment) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(CancelShipment)));
        }

        /// <summary>
        /// This operation creates a shipment and purchases a shipment label. The API returns the label as either a Base64 string or a link to a PDF. For more information visit [Create Shipment Documents](https://shipping.pitneybowes.com/api/post-shipments.html). Following are samples of different carriers -  * [Create a USPS (U.S. Postal Service) Label](https://shipping.pitneybowes.com/api/post-shipments-usps.html)  * [Create a USPS PMOD Label](https://shipping.pitneybowes.com/api/post-shipments-pmod.html) * [Create a USPS Scan-Based Return Label](https://shipping.pitneybowes.com/api/post-shipments-returns.html) * [Create a Pure Post Return Label](https://shipping.pitneybowes.com/api/post-shipments-pure-post-return.html) * [Create a Newgistics Label](https://shipping.pitneybowes.com/api/post-shipments-newgistics.html) * [Create a PB Presort Label](https://shipping.pitneybowes.com/api/post-shipments-presort.html) * [Create a PB Cross-Border Shipment](https://shipping.pitneybowes.com/api/post-shipments-cbds.html) * [Create a UPS (United Parcel Service) Label](https://shipping.pitneybowes.com/api/post-shipments-ups.html)
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipment">request</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="xPBIntegratorCarrierId">USPS Only. Negotiated services rate, if applicable. (optional)</param>
        /// <param name="xPBShipperRatePlan">USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq). (optional)</param>
        /// <param name="xPBShipmentGroupId"> **[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**.The job number that represents the agreement between the merchant and PB Presort. This was provided by Pitney Bowes during [merchant onboarding for PB Presort](https://shipping.pitneybowes.com/carriers/pb-presort.html). (optional)</param>
        /// <param name="xPBShipperCarrierAccountId">**[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**. The merchant&#39;s Mailer ID (MID), as provided by Pitney Bowes during merchant onboarding for PB Presort. (optional)</param>
        /// <param name="includeDeliveryCommitment">If set to true, returns estimated transit times in days. Only for USPS Create Shipment. See also [Pitney Bowes Delivery Guarantee](https://shipping.pitneybowes.com/faqs/delivery-guarantee.html) [Do all USPS services return transit times?](https://shipping.pitneybowes.com/faqs/shipments.html#transit-times-faq) (optional)</param>
        /// <returns>Shipment</returns>
        public Shipment CreateShipmentLabel (string xPBTransactionId, Shipment shipment, bool? xPBUnifiedErrorStructure = default(bool?), string xPBIntegratorCarrierId = default(string), string xPBShipperRatePlan = default(string), string xPBShipmentGroupId = default(string), string xPBShipperCarrierAccountId = default(string), string includeDeliveryCommitment = default(string))
        {
             ApiResponse<Shipment> localVarResponse = CreateShipmentLabelWithHttpInfo(xPBTransactionId, shipment, xPBUnifiedErrorStructure, xPBIntegratorCarrierId, xPBShipperRatePlan, xPBShipmentGroupId, xPBShipperCarrierAccountId, includeDeliveryCommitment);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This operation creates a shipment and purchases a shipment label. The API returns the label as either a Base64 string or a link to a PDF. For more information visit [Create Shipment Documents](https://shipping.pitneybowes.com/api/post-shipments.html). Following are samples of different carriers -  * [Create a USPS (U.S. Postal Service) Label](https://shipping.pitneybowes.com/api/post-shipments-usps.html)  * [Create a USPS PMOD Label](https://shipping.pitneybowes.com/api/post-shipments-pmod.html) * [Create a USPS Scan-Based Return Label](https://shipping.pitneybowes.com/api/post-shipments-returns.html) * [Create a Pure Post Return Label](https://shipping.pitneybowes.com/api/post-shipments-pure-post-return.html) * [Create a Newgistics Label](https://shipping.pitneybowes.com/api/post-shipments-newgistics.html) * [Create a PB Presort Label](https://shipping.pitneybowes.com/api/post-shipments-presort.html) * [Create a PB Cross-Border Shipment](https://shipping.pitneybowes.com/api/post-shipments-cbds.html) * [Create a UPS (United Parcel Service) Label](https://shipping.pitneybowes.com/api/post-shipments-ups.html)
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipment">request</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="xPBIntegratorCarrierId">USPS Only. Negotiated services rate, if applicable. (optional)</param>
        /// <param name="xPBShipperRatePlan">USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq). (optional)</param>
        /// <param name="xPBShipmentGroupId"> **[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**.The job number that represents the agreement between the merchant and PB Presort. This was provided by Pitney Bowes during [merchant onboarding for PB Presort](https://shipping.pitneybowes.com/carriers/pb-presort.html). (optional)</param>
        /// <param name="xPBShipperCarrierAccountId">**[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**. The merchant&#39;s Mailer ID (MID), as provided by Pitney Bowes during merchant onboarding for PB Presort. (optional)</param>
        /// <param name="includeDeliveryCommitment">If set to true, returns estimated transit times in days. Only for USPS Create Shipment. See also [Pitney Bowes Delivery Guarantee](https://shipping.pitneybowes.com/faqs/delivery-guarantee.html) [Do all USPS services return transit times?](https://shipping.pitneybowes.com/faqs/shipments.html#transit-times-faq) (optional)</param>
        /// <returns>ApiResponse of Shipment</returns>
        public ApiResponse<Shipment> CreateShipmentLabelWithHttpInfo (string xPBTransactionId, Shipment shipment, bool? xPBUnifiedErrorStructure = default(bool?), string xPBIntegratorCarrierId = default(string), string xPBShipperRatePlan = default(string), string xPBShipmentGroupId = default(string), string xPBShipperCarrierAccountId = default(string), string includeDeliveryCommitment = default(string))
        {
            // verify the required parameter 'xPBTransactionId' is set
            if (xPBTransactionId == null)
                throw new ApiException(400, "Missing required parameter 'xPBTransactionId' when calling ShipmentApi->CreateShipmentLabel");
            // verify the required parameter 'shipment' is set
            if (shipment == null)
                throw new ApiException(400, "Missing required parameter 'shipment' when calling ShipmentApi->CreateShipmentLabel");

            var localVarPath = "/v1/shipments";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (includeDeliveryCommitment != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "includeDeliveryCommitment", includeDeliveryCommitment)); // query parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (xPBTransactionId != null) localVarHeaderParams.Add("X-PB-TransactionId", this.Configuration.ApiClient.ParameterToString(xPBTransactionId)); // header parameter
            if (xPBIntegratorCarrierId != null) localVarHeaderParams.Add("X-PB-Integrator-CarrierId", this.Configuration.ApiClient.ParameterToString(xPBIntegratorCarrierId)); // header parameter
            if (xPBShipperRatePlan != null) localVarHeaderParams.Add("X-PB-Shipper-Rate-Plan", this.Configuration.ApiClient.ParameterToString(xPBShipperRatePlan)); // header parameter
            if (xPBShipmentGroupId != null) localVarHeaderParams.Add("X-PB-ShipmentGroupId", this.Configuration.ApiClient.ParameterToString(xPBShipmentGroupId)); // header parameter
            if (xPBShipperCarrierAccountId != null) localVarHeaderParams.Add("X-PB-Shipper-Carrier-AccountId", this.Configuration.ApiClient.ParameterToString(xPBShipperCarrierAccountId)); // header parameter
            if (shipment != null && shipment.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(shipment); // http body (model) parameter
            }
            else
            {
                localVarPostBody = shipment; // byte array
            }

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateShipmentLabel", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Shipment>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Shipment) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Shipment)));
        }

        /// <summary>
        /// This operation creates a shipment and purchases a shipment label. The API returns the label as either a Base64 string or a link to a PDF. For more information visit [Create Shipment Documents](https://shipping.pitneybowes.com/api/post-shipments.html). Following are samples of different carriers -  * [Create a USPS (U.S. Postal Service) Label](https://shipping.pitneybowes.com/api/post-shipments-usps.html)  * [Create a USPS PMOD Label](https://shipping.pitneybowes.com/api/post-shipments-pmod.html) * [Create a USPS Scan-Based Return Label](https://shipping.pitneybowes.com/api/post-shipments-returns.html) * [Create a Pure Post Return Label](https://shipping.pitneybowes.com/api/post-shipments-pure-post-return.html) * [Create a Newgistics Label](https://shipping.pitneybowes.com/api/post-shipments-newgistics.html) * [Create a PB Presort Label](https://shipping.pitneybowes.com/api/post-shipments-presort.html) * [Create a PB Cross-Border Shipment](https://shipping.pitneybowes.com/api/post-shipments-cbds.html) * [Create a UPS (United Parcel Service) Label](https://shipping.pitneybowes.com/api/post-shipments-ups.html)
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipment">request</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="xPBIntegratorCarrierId">USPS Only. Negotiated services rate, if applicable. (optional)</param>
        /// <param name="xPBShipperRatePlan">USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq). (optional)</param>
        /// <param name="xPBShipmentGroupId"> **[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**.The job number that represents the agreement between the merchant and PB Presort. This was provided by Pitney Bowes during [merchant onboarding for PB Presort](https://shipping.pitneybowes.com/carriers/pb-presort.html). (optional)</param>
        /// <param name="xPBShipperCarrierAccountId">**[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**. The merchant&#39;s Mailer ID (MID), as provided by Pitney Bowes during merchant onboarding for PB Presort. (optional)</param>
        /// <param name="includeDeliveryCommitment">If set to true, returns estimated transit times in days. Only for USPS Create Shipment. See also [Pitney Bowes Delivery Guarantee](https://shipping.pitneybowes.com/faqs/delivery-guarantee.html) [Do all USPS services return transit times?](https://shipping.pitneybowes.com/faqs/shipments.html#transit-times-faq) (optional)</param>
        /// <returns>Task of Shipment</returns>
        public async System.Threading.Tasks.Task<Shipment> CreateShipmentLabelAsync (string xPBTransactionId, Shipment shipment, bool? xPBUnifiedErrorStructure = default(bool?), string xPBIntegratorCarrierId = default(string), string xPBShipperRatePlan = default(string), string xPBShipmentGroupId = default(string), string xPBShipperCarrierAccountId = default(string), string includeDeliveryCommitment = default(string))
        {
             ApiResponse<Shipment> localVarResponse = await CreateShipmentLabelAsyncWithHttpInfo(xPBTransactionId, shipment, xPBUnifiedErrorStructure, xPBIntegratorCarrierId, xPBShipperRatePlan, xPBShipmentGroupId, xPBShipperCarrierAccountId, includeDeliveryCommitment);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This operation creates a shipment and purchases a shipment label. The API returns the label as either a Base64 string or a link to a PDF. For more information visit [Create Shipment Documents](https://shipping.pitneybowes.com/api/post-shipments.html). Following are samples of different carriers -  * [Create a USPS (U.S. Postal Service) Label](https://shipping.pitneybowes.com/api/post-shipments-usps.html)  * [Create a USPS PMOD Label](https://shipping.pitneybowes.com/api/post-shipments-pmod.html) * [Create a USPS Scan-Based Return Label](https://shipping.pitneybowes.com/api/post-shipments-returns.html) * [Create a Pure Post Return Label](https://shipping.pitneybowes.com/api/post-shipments-pure-post-return.html) * [Create a Newgistics Label](https://shipping.pitneybowes.com/api/post-shipments-newgistics.html) * [Create a PB Presort Label](https://shipping.pitneybowes.com/api/post-shipments-presort.html) * [Create a PB Cross-Border Shipment](https://shipping.pitneybowes.com/api/post-shipments-cbds.html) * [Create a UPS (United Parcel Service) Label](https://shipping.pitneybowes.com/api/post-shipments-ups.html)
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBTransactionId">Required. A unique identifier for the transaction, up to 25 characters.</param>
        /// <param name="shipment">request</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="xPBIntegratorCarrierId">USPS Only. Negotiated services rate, if applicable. (optional)</param>
        /// <param name="xPBShipperRatePlan">USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq). (optional)</param>
        /// <param name="xPBShipmentGroupId"> **[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**.The job number that represents the agreement between the merchant and PB Presort. This was provided by Pitney Bowes during [merchant onboarding for PB Presort](https://shipping.pitneybowes.com/carriers/pb-presort.html). (optional)</param>
        /// <param name="xPBShipperCarrierAccountId">**[Required parameter for PBPresort service](https://shipping.pitneybowes.com/api/post-shipments-presort.html)**. The merchant&#39;s Mailer ID (MID), as provided by Pitney Bowes during merchant onboarding for PB Presort. (optional)</param>
        /// <param name="includeDeliveryCommitment">If set to true, returns estimated transit times in days. Only for USPS Create Shipment. See also [Pitney Bowes Delivery Guarantee](https://shipping.pitneybowes.com/faqs/delivery-guarantee.html) [Do all USPS services return transit times?](https://shipping.pitneybowes.com/faqs/shipments.html#transit-times-faq) (optional)</param>
        /// <returns>Task of ApiResponse (Shipment)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Shipment>> CreateShipmentLabelAsyncWithHttpInfo (string xPBTransactionId, Shipment shipment, bool? xPBUnifiedErrorStructure = default(bool?), string xPBIntegratorCarrierId = default(string), string xPBShipperRatePlan = default(string), string xPBShipmentGroupId = default(string), string xPBShipperCarrierAccountId = default(string), string includeDeliveryCommitment = default(string))
        {
            // verify the required parameter 'xPBTransactionId' is set
            if (xPBTransactionId == null)
                throw new ApiException(400, "Missing required parameter 'xPBTransactionId' when calling ShipmentApi->CreateShipmentLabel");
            // verify the required parameter 'shipment' is set
            if (shipment == null)
                throw new ApiException(400, "Missing required parameter 'shipment' when calling ShipmentApi->CreateShipmentLabel");

            var localVarPath = "/v1/shipments";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (includeDeliveryCommitment != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "includeDeliveryCommitment", includeDeliveryCommitment)); // query parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (xPBTransactionId != null) localVarHeaderParams.Add("X-PB-TransactionId", this.Configuration.ApiClient.ParameterToString(xPBTransactionId)); // header parameter
            if (xPBIntegratorCarrierId != null) localVarHeaderParams.Add("X-PB-Integrator-CarrierId", this.Configuration.ApiClient.ParameterToString(xPBIntegratorCarrierId)); // header parameter
            if (xPBShipperRatePlan != null) localVarHeaderParams.Add("X-PB-Shipper-Rate-Plan", this.Configuration.ApiClient.ParameterToString(xPBShipperRatePlan)); // header parameter
            if (xPBShipmentGroupId != null) localVarHeaderParams.Add("X-PB-ShipmentGroupId", this.Configuration.ApiClient.ParameterToString(xPBShipmentGroupId)); // header parameter
            if (xPBShipperCarrierAccountId != null) localVarHeaderParams.Add("X-PB-Shipper-Carrier-AccountId", this.Configuration.ApiClient.ParameterToString(xPBShipperCarrierAccountId)); // header parameter
            if (shipment != null && shipment.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(shipment); // http body (model) parameter
            }
            else
            {
                localVarPostBody = shipment; // byte array
            }

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateShipmentLabel", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Shipment>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Shipment) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Shipment)));
        }

        /// <summary>
        /// reprintShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="shipmentId">Required. The shipment ID that was issued when shipment label was generated.</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Shipment</returns>
        public Shipment ReprintShipment (string shipmentId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?))
        {
             ApiResponse<Shipment> localVarResponse = ReprintShipmentWithHttpInfo(shipmentId, xPBUnifiedErrorStructure, carrier);
             return localVarResponse.Data;
        }

        /// <summary>
        /// reprintShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="shipmentId">Required. The shipment ID that was issued when shipment label was generated.</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>ApiResponse of Shipment</returns>
        public ApiResponse<Shipment> ReprintShipmentWithHttpInfo (string shipmentId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?))
        {
            // verify the required parameter 'shipmentId' is set
            if (shipmentId == null)
                throw new ApiException(400, "Missing required parameter 'shipmentId' when calling ShipmentApi->ReprintShipment");

            var localVarPath = "/v1/shipments/{shipmentId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (shipmentId != null) localVarPathParams.Add("shipmentId", this.Configuration.ApiClient.ParameterToString(shipmentId)); // path parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (carrier != null) localVarHeaderParams.Add("carrier", this.Configuration.ApiClient.ParameterToString(carrier)); // header parameter

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ReprintShipment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Shipment>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Shipment) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Shipment)));
        }

        /// <summary>
        /// reprintShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="shipmentId">Required. The shipment ID that was issued when shipment label was generated.</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Task of Shipment</returns>
        public async System.Threading.Tasks.Task<Shipment> ReprintShipmentAsync (string shipmentId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?))
        {
             ApiResponse<Shipment> localVarResponse = await ReprintShipmentAsyncWithHttpInfo(shipmentId, xPBUnifiedErrorStructure, carrier);
             return localVarResponse.Data;

        }

        /// <summary>
        /// reprintShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="shipmentId">Required. The shipment ID that was issued when shipment label was generated.</param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Task of ApiResponse (Shipment)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Shipment>> ReprintShipmentAsyncWithHttpInfo (string shipmentId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?))
        {
            // verify the required parameter 'shipmentId' is set
            if (shipmentId == null)
                throw new ApiException(400, "Missing required parameter 'shipmentId' when calling ShipmentApi->ReprintShipment");

            var localVarPath = "/v1/shipments/{shipmentId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (shipmentId != null) localVarPathParams.Add("shipmentId", this.Configuration.ApiClient.ParameterToString(shipmentId)); // path parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (carrier != null) localVarHeaderParams.Add("carrier", this.Configuration.ApiClient.ParameterToString(carrier)); // header parameter

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ReprintShipment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Shipment>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Shipment) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Shipment)));
        }

        /// <summary>
        /// retryShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="originalTransactionId"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Shipment</returns>
        public Shipment RetryShipment (string originalTransactionId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?))
        {
             ApiResponse<Shipment> localVarResponse = RetryShipmentWithHttpInfo(originalTransactionId, xPBUnifiedErrorStructure, carrier);
             return localVarResponse.Data;
        }

        /// <summary>
        /// retryShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="originalTransactionId"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>ApiResponse of Shipment</returns>
        public ApiResponse<Shipment> RetryShipmentWithHttpInfo (string originalTransactionId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?))
        {
            // verify the required parameter 'originalTransactionId' is set
            if (originalTransactionId == null)
                throw new ApiException(400, "Missing required parameter 'originalTransactionId' when calling ShipmentApi->RetryShipment");

            var localVarPath = "/v1/shipments";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (originalTransactionId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "originalTransactionId", originalTransactionId)); // query parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (carrier != null) localVarHeaderParams.Add("carrier", this.Configuration.ApiClient.ParameterToString(carrier)); // header parameter

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetryShipment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Shipment>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Shipment) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Shipment)));
        }

        /// <summary>
        /// retryShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="originalTransactionId"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Task of Shipment</returns>
        public async System.Threading.Tasks.Task<Shipment> RetryShipmentAsync (string originalTransactionId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?))
        {
             ApiResponse<Shipment> localVarResponse = await RetryShipmentAsyncWithHttpInfo(originalTransactionId, xPBUnifiedErrorStructure, carrier);
             return localVarResponse.Data;

        }

        /// <summary>
        /// retryShipment 
        /// </summary>
        /// <exception cref="pitneyBower.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="originalTransactionId"></param>
        /// <param name="xPBUnifiedErrorStructure">Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)</param>
        /// <param name="carrier"> (optional)</param>
        /// <returns>Task of ApiResponse (Shipment)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Shipment>> RetryShipmentAsyncWithHttpInfo (string originalTransactionId, bool? xPBUnifiedErrorStructure = default(bool?), Carrier? carrier = default(Carrier?))
        {
            // verify the required parameter 'originalTransactionId' is set
            if (originalTransactionId == null)
                throw new ApiException(400, "Missing required parameter 'originalTransactionId' when calling ShipmentApi->RetryShipment");

            var localVarPath = "/v1/shipments";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (originalTransactionId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "originalTransactionId", originalTransactionId)); // query parameter
            if (xPBUnifiedErrorStructure != null) localVarHeaderParams.Add("X-PB-UnifiedErrorStructure", this.Configuration.ApiClient.ParameterToString(xPBUnifiedErrorStructure)); // header parameter
            if (carrier != null) localVarHeaderParams.Add("carrier", this.Configuration.ApiClient.ParameterToString(carrier)); // header parameter

            // authentication (oAuth2ClientCredentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarHeaderParams["Authorization"] = "Bearer " + this.Configuration.AccessToken;
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetryShipment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Shipment>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Shipment) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Shipment)));
        }

    }
}
